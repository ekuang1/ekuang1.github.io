id: dsq-3006398218
replyToId: dsq-2956808865
date: 2016-11-17T03:00:48.0000000-08:00
name: ZorgoZ
avatar: https://disqus.com/api/users/avatars/zorgoz.jpg
message: "<p>I have upgraded JamesFormatter to support alignment too.</p><p>public static string FormatWith(this string format<br>      , IFormatProvider provider, object source)<br>  {<br>    if (format == null)<br>      throw new ArgumentNullException(\"format\");</p><p>    List&lt;object&gt; values = new List&lt;object&gt;();<br>    string rewrittenFormat = Regex.Replace(format,<br>      @\"(?&lt;start&gt;\\{)+(?&lt;property&gt;[\\w\\.\\[\\]]+)(,(?&lt;alignment&gt;-?\\d+))?(?&lt;format&gt;:[^}]+)?(?&lt;end&gt;\\})+\",<br>      delegate(Match m)<br>      {<br>        Group startGroup = m.Groups[\"start\"];<br>        Group propertyGroup = m.Groups[\"property\"];<br>Group alignmentGroup = m.Groups[\"alignment\"];<br>        Group formatGroup = m.Groups[\"format\"];<br>        Group endGroup = m.Groups[\"end\"];</p><p>        values.Add((propertyGroup.Value == \"0\")<br>          ? source<br>          : Eval(source, propertyGroup.Value));</p><p>        int openings = startGroup.Captures.Count;<br>        int closings = endGroup.Captures.Count;</p><p>        var result = openings &gt; closings || openings % 2 == 0<br>           ? m.Value<br>           : new string('{', openings) + (values.Count - 1) <br>     + (alignmentGroup.Captures.Count == 1 ? \",\" + alignmentGroup.Value : string.Empty) <br>             + formatGroup.Value<br>             + new string('}', closings);</p><p>return result;<br>      },<br>      RegexOptions.Compiled <br>      | RegexOptions.CultureInvariant <br>      | RegexOptions.IgnoreCase);</p><p>  return string.Format(provider, rewrittenFormat, values.ToArray());<br>  }</p>"
