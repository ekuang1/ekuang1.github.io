id: dsq-747527642
date: 2009-01-09T23:05:06.0000000-08:00
name: Andy
avatar: https://disqus.com/api/users/avatars/Andy.jpg
message: <p>Hmmm... I thought this was my idea.  :]  My own version though, was able to do this in 0.015 milliseconds (on my slow old laptop).  It relies on String.Format to worry about the brackets and format parameters.  It's not perfect, but it short, sweet, and to the point... and fast.<br>Private _props As New Dictionary(Of Integer, Reflection.PropertyInfo())<br>    &lt;Extension()&gt; _<br>    Public Function GetCachedProperties(ByVal type As Type) As Reflection.PropertyInfo()<br>        Dim id As Integer = type.GetHashCode<br>        If _props.ContainsKey(id) Then Return _props(id)<br>        Dim props = type.GetProperties()<br>        SyncLock _props<br>            _props.Add(id, props)<br>        End SyncLock<br>        Return props<br>    End Function<br>    ''' &lt;summary&gt;<br>    ''' Uses object's properties to format the string <br>    ''' (Ex.  "The price is {Price:c2}" becomes "The price is $9,999.99").<br>    ''' &lt;/summary&gt;<br>    &lt;Extension()&gt; _<br>    Public Function FormatWith(ByVal input As String, ByVal obj As Object) As String<br>        Dim vals As New List(Of Object)<br>        For Each prop In obj.GetType.GetCachedProperties()<br>            If input.Contains("{" &amp; prop.Name, StringComparison.OrdinalIgnoreCase) Then<br>                input = input.Replace("{" &amp; prop.Name, "{" &amp; vals.Count, StringComparison.OrdinalIgnoreCase)<br>                vals.Add(prop.GetValue(obj, Nothing))<br>            End If<br>        Next<br>        Return String.Format(input, vals.ToArray())<br>    End Function</p>
