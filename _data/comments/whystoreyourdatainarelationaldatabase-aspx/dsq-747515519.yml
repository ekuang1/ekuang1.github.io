id: dsq-747515519
date: 2006-06-29T19:39:00.0000000-07:00
name: Sam
avatar: https://disqus.com/api/users/avatars/Sam.jpg
message: <p>Worrying about what lasts longer, data vs. application always seems like such a strawman to me. It's not like db4o (or any other, but it's the simplest IME) is going to lock your data into a vault.<br>It's just my opinion, but if the day or two spent dumping<br>your objects to Xml so they can be imported into an RDBMS for a replacement system is really that big of a concern, then you're a lot better of a developer than me. Personally, such a simple, down-right tedious task, that I could estimate with my eyes closed makes me pretty comfortable.<br>Of course if you think Sun/MS/et all time-bomb their frameworks, and that you won't have the option to bust open Snippet Compiler or such when you finally need to make the migration then you might have a point.<br>I'm pretty comfortable thinking that I'll be able to run .NET2 for a good long time though... and if not, the db4o source-code is free. I'm sure I could figure out the storage format well enough to dump my data without too much effort.<br>Of course, I'm not trying to say an OODBMS in general is a good idea. I think for most .NET applications that maintain a database of a few gigs in size, db4o is a faster, more fun way to develop (than SqlServer), but I had a good deal more trouble trying to get Matisse or FastObjects to work the way I wanted, with syntax that wasn't every bit as cumbersome as ADO.NET so YMMV.</p>
