id: dsq-747528027
date: 2009-02-07T13:33:37.0000000-08:00
name: Stanley Colpas
avatar: https://disqus.com/api/users/avatars/Stanley Colpas.jpg
message: "<p>ASP.NET MVC is great, but unfortunately its default templating system is not so great. For example, the following is very common:<br><code>&lt;div&gt;&lt;%= name %&gt;&lt;/div&gt;</code><br>The contents of the name variable might be coming from the database, and when the contents were inserted into the db the original content may have come from a form input, i.e. input from the user. So the contents of name cannot be trusted (no, the request validation cannot catch everything).<br>The official way to do things like this is to always use Html.Encode(name) but I think that's just plain wrong. Why to default NOT to encode? I'd say that it's an exception, not a rule, to want input like that not being encoded.<br>Luckily there exists a great alternative to the default templating system. The alternative is called <a href=\"http://sparkviewengine.com/\" rel=\"nofollow noopener\" title=\"http://sparkviewengine.com/\">Spark</a>. In Spark it's possible to set AutomaticEncoding to true, after which normal <code>${name}</code> is automatically encoded, and if the developer specifically wants to not encode the output, it's as simple as this: <code>!{name}</code>.<br>I like ASP.NET MVC quite a lot, but you developers should focus on safe default work flow. No wonder the net is full of sites vulnerable to XSS when framework defaults are usually unsafe.</p>"
