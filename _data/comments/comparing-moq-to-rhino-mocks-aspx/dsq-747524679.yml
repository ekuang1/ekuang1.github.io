id: dsq-747524679
date: 2008-05-30T23:44:23.0000000-07:00
name: Urs Enzler
avatar: https://disqus.com/api/users/avatars/Urs Enzler.jpg
message: <p>Very interesting discussion here.<br>But I'll stick with NMock2 (<a href="http://sourceforge.net/projects/nmock2/)" rel="nofollow noopener" title="http://sourceforge.net/projects/nmock2/)">http://sourceforge.net/proj...</a> because:<br>- it provides easier syntax than both MoQ and Rhino Mocks<br>   - the hybrid style of Rhino Mocks with mixed expectations and record operations is unnecessary complex in my opinion<br>   - use of lamba expressions in MoQ is not very readable either <br>   - tests are read much more than written -&gt; optimize readability<br>- it has no limitations that come into the way of my daily work<br>   - no support for out/ref parameters in MoQ (as said in docu)<br>We tried to integrate lambda expressions into NMock2 but currently we think that the "magic string" approach is the only one that brings no CLR based limitations to the expectation DSL.<br>Therefore, I'll stick with NMock2 and a good refactoring tool that makes refactoring of "magic strings" as simple as refactoring of compiler checked code.<br>Just my thoughts, though.<br>Happy mocking, Urs<br></p>
