id: dsq-747529711
date: 2009-09-04T05:54:00.0000000-07:00
name: Piers Lawson
avatar: https://disqus.com/api/users/avatars/Piers Lawson.jpg
message: <p>Hi again... I've had a better look at the SDK now and tried migrating my sample web service to it. See my <a href="http://shouldersofgiants.co.uk/Blog/post/2009/09/05/Creating-a-RESTful-Web-Service-Using-ASPNet-MVC-Part-17-e28093-Reviewing-the-Rest-for-ASPNET-MVC-SDK.aspx" rel="nofollow noopener" title="http://shouldersofgiants.co.uk/Blog/post/2009/09/05/Creating-a-RESTful-Web-Service-Using-ASPNet-MVC-Part-17-e28093-Reviewing-the-Rest-for-ASPNET-MVC-SDK.aspx">blog entry</a>.<br>A quick summary of my thoughts:<br>1) I like the idea of using an attribute to mark a controller as supporting REST;<br>2) I like the FormatHandlers approach and being able to add my own;<br>3) Rather than providing ResourceControllerFactory to implement overloading of POST, I think it would be better to provide your own version of HttpRequestWrapper. Which would also allow you to override "Content Type" and "Accepts" all in one central place... transparently;<br>4) I think your overrides should not be restricted to just browser clients;<br>5) I'm not sure how well ResourceModelBinder deals with registering objects with ModelState... but I could be way off the mark there;<br>6) It would be great to see "Views" being added to the XML and JSON FormatHandlers.<br>Item 3 would not only remove the need for ResourceControllerFactory, but also simplify WebApiEnabledAttribute<br>All in all I learnt a lot more about ASP.Net MVC and picked up some good ideas. I hope you keep working on this... if ASP.Net MVC supportted multiple formats natively that would be great.<br>Thanks for publishing your work so far!</p>
