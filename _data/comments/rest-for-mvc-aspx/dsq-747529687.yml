id: dsq-747529687
date: 2009-08-20T06:17:00.0000000-07:00
name: Piers Lawson
avatar: https://disqus.com/api/users/avatars/Piers Lawson.jpg
message: <p>I've had a bit of a poke around and have some comments. I like that you support the format parameter in the query string as I actually prefer this over the accepts header approach (I'm afraid I swallowed the Richardson and Ruby book whole and they give more eloquent reasons for using the query string approach than I could muster). I also like your use of a custom controller factory, though I wonder how much complication this introduces when you are solving a fairly simple problem.<br>What I would like to see or don't like so much:<br>I'm not convinced about how well a web site and a web service served from the same URIs and controllers works. I feel they serve different audiences and purposes and tying them so closely together could constrain them both. For instance your example uses "edit" and "create" in the URI whereas I would expect a web service to support PUT direct to an id and POST direct to the index. So instead of POST to /Home/Create a client would POST to /Home and instead of using PUT to /Home/Edit/5 the client would PUT to /Home/5. You're approach doesn't preclude this... I'm just illustrating the "danger" of making the same site act as both a human consumable web site and a web service.<br>There is no way to manipulate the XML / JSON being served. That means one of the major REST principles "Hypermedia as the engine of application state" is not possible to achieve without polluting your model with properties that hold URIs. If you provided a transformation step, URIs could be injected into the outgoing representation. Also, the outgoing representation could be manipulated in other ways that the developer deems appropriate (e.g. supporting HEAD with a cut down representation, adding namespaces etc. etc.). This to me is crucial... it is meant to be Model VIEW Controller after all!<br>I'd love to see overloading of POST built in so that client's that don't support PUT and DELETE can use these verbs.<br>Is there a more formal place to discuss this functionality?</p>
