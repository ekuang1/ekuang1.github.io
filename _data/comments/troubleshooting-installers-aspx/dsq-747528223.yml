id: dsq-747528223
date: 2009-03-05T22:21:39.0000000-08:00
name: haacked
avatar: https://github.com/haacked.png?size=120
message: <p>@RussellH In general, we NGEN all "Framework" assemblies since it'll be common for multiple applications on the same machine to use these assemblies.<br><br><br><br>There's a great <a href="http://msdn.microsoft.com/en-us/magazine/cc163610.aspx" rel="nofollow noopener" title="NGen">article by Surupa</a> that goes into more detail.<br><br><br><br>Here's a snippet.<br><br><br><br></p><blockquote><br><br><strong>Why Use NGen?<br><br></strong><br><br>NGen also <strong>improves the overall memory usage of the system</strong> by allowing different processes that use the same assembly to share the corresponding NGen image among them, as shown in Figure 1. This can be very useful in both client and server scenarios in which the total memory footprint must be minimized. A classic example is the Terminal Services scenario in which a large number of users might be logged in and running the same application at the same time. If you're building libraries or other reusable components, you may also want to use NGen so that applications using your components can share the generated code pages.<br><br></blockquote>
