id: dsq-747525798
date: 2008-07-18T08:27:48.0000000-07:00
name: Corey Gaudin
avatar: https://disqus.com/api/users/avatars/Corey Gaudin.jpg
message: <p>Comment to tgmdbm.<br>I here what you said about RenderAction, however, keep in mind that it does not really break down in testability wise, because you should be testing all of your controller and actions. So if a particular view calls a RenderAction&lt;someothercontroller&gt;(c =&gt; c.ControlPiece(someKey)), then you should be writing a test for the original action and the ControlPiece action. <br>So while I agree the controller doesnt flow up the model data for all of the view, the controller is still the keeper for getting the model data. Its no different then using Javascript to use AJAX to partially pull html or a json object (and build html) once a view is loaded. The only difference is it is done before the page is fully rendered to the client.<br>Baring this, I see no reason why it violates a MVC pattern. The controller is still keeping the model data logic behind it, its just that you might have a call to an action more than once per view. Again, no different that a AJAX heavy view which handles parital rendering.</p>
