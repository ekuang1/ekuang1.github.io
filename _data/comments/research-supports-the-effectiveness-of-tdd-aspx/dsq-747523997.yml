id: dsq-747523997
date: 2011-11-23T15:49:09.0000000-08:00
name: Steve Fenton
avatar: https://disqus.com/api/users/avatars/Steve Fenton.jpg
message: <p>When you work in software, one of the valuable things you pick up over time is experience.<br>I have worked in teams that don't test, teams that write tests after they code and teams that use TDD.<br>If I measured each of these teams against the others, it would definitely show that having tests is better than having no tests and it would also show that TDD has additional benefits over and above simply writing automated tests.<br>One important caveat to these (very personal) results is that I find that the the quality of the developers was massively different between these teams, so even if we removed the variability of tests the teams would still rank the same - so the question is about order, does TDD (combined with other methods) make great developers, or do great developers find something of value in TDD? The great developers were also inclined towards regular releases, lean process and paired programming.<br>I don't know what the cause/effect cycle is, but TDD is definitely related to great developers in some way.</p>
