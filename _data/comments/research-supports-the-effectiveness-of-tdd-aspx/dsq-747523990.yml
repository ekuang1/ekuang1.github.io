id: dsq-747523990
date: 2008-02-04T12:33:00.0000000-08:00
name: Slevdi
avatar: https://disqus.com/api/users/avatars/Slevdi.jpg
message: <p>Just my thoughts on TDD in the modern world:<br>Whilst I have always created automated tests (well, often), I am new to TDD. I love it, however it has proven conclusively to me that I need to know lots about what I need to achieve (the problem) and how to achieve it, as well as lots more about the technology (the tools) I am using before I can make any acceptable progress.<br>This is very different to the (my) old approach of having a general idea of the problem then developing a solution incrementally as one's understanding of the capabilities of the technology increases. I did this with Perl and VBScript apps and webapps throughout the 90s, developing tests where I could along the way, using more effective techniques to improve the delivered application's functionality and maintainability as I learned more.<br>C#, MVP, object orientation, patterns, <a href="http://asp.net" rel="nofollow noopener" title="asp.net">asp.net</a> framework(s), mocking packages, Http simulators (quick ad for Phil:-), Resharper, VS and so on, now potentially can make me amazingly productive once I have become <em>totally familiar</em> with them. The learning curve is very substantial to achieve this, and it is currently a very frustrating if intellectually stimulating time for me.</p>
