id: dsq-747523979
date: 2008-01-25T00:03:55.0000000-08:00
name: Isaac Gouy
avatar: https://disqus.com/api/users/avatars/Isaac Gouy.jpg
message: <p>haacked wrote <em>"... people built steam engines ..."</em><br>You seem to be stuck back in the late 18th century, first Industrial Revolution. The 19th century second Industrial Revolution was built on science, and now in the 21st century ...<br>haacked wrote <em>"Back in the day, people got sick drinking tainted water. But they didn't get sick drinking beer."</em><br>If you want to tell yourself you know what happened 7000 years ago that's fine, but I'm just trying to understand what you've said this week.<br>haacked wrote <em>"I didn't keep stats, but I don't need a luminosity meter to know when it's sunnier one day more than another."</em><br>Was it sunnier on 12 March 2005 than on 12 April 2005? <br>If there was a clear sky on 9th April, overcast on 12th April, and clear sky on 15th April - would you <em>know</em> whether the 9th or 15th was sunnier, or would it just be <em>a guess</em>?<br><br>haacked wrote <em>"Once I got my team ... writing tests ..."</em><br>Automated unit testing goes back before TDD and before Agile - <br><code>"Simple Smalltalk testing" Kent Beck, Smalltalk Report 4(2) Oct 1994</code> - and iirc Kent Beck clearly states TDD is a development technique not a testing technique, so let's not confuse writing tests with TDD.<br>haacked wrote <em>"It just may be that I don't have to write tests first to gain the benefit."</em><br>The issue is whether writing tests is a trade-off between productivity and quality (and note that simply doing a daily build correlates with increased productivity):<br>MacCormack, A., Kemerer, C.F., Cusumano, M., and B. Crandall, "Trade-offs between Productivity and Quality in Selecting Software Development Practices." IEEE Software 20(5) 2003 78-85<br></p>
