id: dsq-941806809
date: 2013-06-25T10:16:13.0000000-07:00
name: Timothy Meade
avatar: https://disqus.com/api/users/avatars/tmztmobile.jpg
message: <p>Interesting. I recently attended a talk on Writing Portable C# Applications given by an MVP here in the Cleveland area. I was disappointed that "Portable" meant only to Windows, Windows 8, and WP 7 and 8. There was a cursory mention of Xamarin for porting to iOS and a solution for Android, but that was not given as a demo.<br>I did learn that it is possible to build an assembly that runs on all three platforms (limited to Win/Win8/WP as above), and that ModelViews can then be crafted for each of the targets on top of that portable assembly.<br>I would very much like to build cross-platform mobile applications, and I really like C# as a language. I would think it would be in Microsoft's best interest to embrace Xamarin and actually support building applications for iOS and Android in their development tools. I can see how it would bring in additional SQL server and Server licenses, especially if it allowed focusing on the API on the backend which could be built on Azure or deployed in a data center on Windows servers. The tight integration between C# on the client (mobile in this case) and server would make it the obvious choice for both in enterprise platforms. The ability to simultaneously support Android and iOS as well as Windows Phone means less trade-offs where the more popular platforms are targeted to the exclusion of Windows Phone.<br>Why should a mobile developer have to build all of the logic, server sync, protocol stuff more than once? We can encapsulate that into a single C# library that can be used on Windows, Windows 8, WP 7/8, and IOS and Android devices. We can then build ModelViews that give it a native look on all of those platforms. By the way, neither Apple nor Google offer that flexibility in cross-platform development, only Microsoft can if they want to.</p>
