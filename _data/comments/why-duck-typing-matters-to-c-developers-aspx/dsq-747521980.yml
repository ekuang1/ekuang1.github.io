id: dsq-747521980
date: 2007-12-17T20:35:03.0000000-08:00
name: David
avatar: https://disqus.com/api/users/avatars/David.jpg
message: "<p>Of course you have to recompile. I thought that was obvious from my example. But that's my whole point: when you recompile, you will not receive any errors or warnings that might indicate to you that the contract for the method Foo has changed, even though it clearly has. You seem to imply that this isn't a big deal, because you'll just \"test to make sure [you're] still fulfilling whatever contract is necessary.\" Perhaps you are under the impression that testing has no cost and is 100% effective? That has not been my experience.<br>It is indeed somewhat similar to the problem of the interface implementer, but again, that is my point. Rather than the interface implementer changing the class to guarantee that it correctly implements the interface, and then ALL consumers receiving the benefit of that change, with duck typing, it is up to every individual consumer, first to find all of the potential breaking changes (which is far from trivial, especially given the lack of help from the compiler, as mentioned above), and then to figure out how to fix each of them individually. That is what I meant by removing the black box concept.</p>"
