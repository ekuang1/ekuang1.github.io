id: dsq-747521978
date: 2007-12-14T06:08:52.0000000-08:00
name: Haacked
avatar: https://github.com/haacked.png?size=120
message: <p>Well you can't really "change" an interface. What you've shown is creating a new interface that just happens to be the same name as the original interface. But it is a <em>new</em> interface. If you're in the habit of deploying such a change without recompiling clients, then I, as a client of your assembly, probably have much more to worry about than the off chance that the new method you added to the interface just happens to match my duck typed method.<br>Fact of the matter is, it won't matter until I recompile. As far as my client is concerned, it is compiled against your original interface, not the new one. So calling Bar2 does nothing until I recompile my client.<br>And when I do, I'll be sure to test to make sure I'm still fulfilling whatever contract is necessary. If not, then I'll do something other than duck typing.<br>It's really the same boat as an interface implementer. You changed the interface, how do I know you didn't change the semantics of the original method <em>along with</em> adding the new method? I have to re-evaluate all my assumptions whether or not I'm using duck typing.</p>
