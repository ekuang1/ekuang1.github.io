id: dsq-747532141
date: 2010-07-19T18:53:23.0000000-07:00
name: Jake
avatar: https://disqus.com/api/users/avatars/Jake.jpg
message: <p>All metadata (DisplayFormat, UIHint, etc.) for the properties is lost when DisplayFor is called so the code isn't very useful as it is. After playing around with generics and reflection I was able to come up with a solution that preserves the metadata, but I wonder if there's an easier way to do it.<br>Anyway, here it is:<br><code><br>&lt;% foreach (var property in properties)<br>{ %&gt;<br>&lt;td&gt;<br>&lt;%<br>var parameters = new ParameterExpression[] { Expression.Parameter(typeof(IList), "m") };<br>var memberExpression = Expression.MakeMemberAccess(Expression.Constant(Model[i]), Model[i].GetType().GetProperty(property.PropertyName));<br>Type[] typeArgs = { typeof(IList), property.ModelType };<br>var finalExpression = Expression.Lambda(typeof(Func&lt;,&gt;).MakeGenericType(typeArgs), memberExpression, parameters);<br>%&gt;<br>&lt;%=(MvcHtmlString)typeof(DisplayExtensions).GetMethods().<br>    First(method =&gt; method.Name == "DisplayFor" &amp;&amp; method.IsGenericMethodDefinition)<br>    .MakeGenericMethod(typeArgs).Invoke(Html, new object[] { Html, finalExpression })%&gt;<br>&lt;/td&gt;<br>&lt;% } %&gt;<br></code></p>
