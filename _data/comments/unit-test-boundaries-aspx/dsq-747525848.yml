id: dsq-747525848
date: 2008-07-31T15:35:14.0000000-07:00
name: Sebastian
avatar: https://disqus.com/api/users/avatars/Sebastian.jpg
message: <p>This is a good advice... at least in theory. I have found cases where this is not possible (or at least I was unable to find a perfect solution).<br>One example is WCF services. Having a service-oriented solution, you often find yourself having service A making calls to service B.<br>Now, of course you could test the service class directly (skipping the contract and the WCF mechanisms), but sometimes this is not possible (service behaves differently if used as a service instead of plain instantiation). Also if you look at WCF versus remoting or any other communication mechanisms, one of the basic rules is that it treats any service as a remote service. So standard instantiation would break this assumption.<br>My only solution to this issue was to create mock services (in the example above - mock service B), but still you have the WCF communication mechanisms in place, so this can be considered crossing the border.<br>Do you have any better solution for this scenario?<br>Sorry if the English may not be the best, it's not my native language.</p>
