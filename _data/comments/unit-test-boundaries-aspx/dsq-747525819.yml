id: dsq-747525819
date: 2008-07-22T22:33:05.0000000-07:00
name: Russell
avatar: https://disqus.com/api/users/avatars/Russell.jpg
message: <p>&gt;Suppose you have a function that pulls a list of coordinates from &gt;the database and calculated the best fit line for those &gt;coordinates. Your unit test for this method should ideally not &gt;make an actual database call, as that is reaching across a &gt;boundary and coupling your method to a specific data access layer.<br>But I would argue that this function may belong in the data access code.  For example, look at:<br><a href="http://download.oracle.com/docs/cd/B19306_01/server.102/b14223/analysis.htm#sthref1775" rel="nofollow noopener" title="http://download.oracle.com/docs/cd/B19306_01/server.102/b14223/analysis.htm#sthref1775">download.oracle.com/.../analysis.htm#sthref1775</a><br>SELECT s.channel_id, REGR_SLOPE(s.quantity_sold, p.prod_list_price) SLOPE,<br>  REGR_INTERCEPT(s.quantity_sold, p.prod_list_price) INTCPT,<br>  REGR_R2(s.quantity_sold, p.prod_list_price) RSQR,<br>  REGR_COUNT(s.quantity_sold, p.prod_list_price) COUNT,<br>  REGR_AVGX(s.quantity_sold, p.prod_list_price) AVGLISTP,<br>  REGR_AVGY(s.quantity_sold, p.prod_list_price) AVGQSOLD<br>FROM sales s, products p WHERE s.prod_id=p.prod_id<br>  AND p.prod_category='Electronics' AND s.time_id=to_DATE('10-OCT-2000')<br>GROUP BY s.channel_id;<br>And this solution scales.  You're doing the work right next to the data, not pulling potentially billions or rows of data across the network and then doing the curve fitting.<br>I'm fairly new to TDD, but why isn't it unit testing if I encapsulate the above in a stored procedure, and write other stored procedures (the unit tests) to test it?</p>
