id: dsq-747525846
date: 2008-07-28T22:11:12.0000000-07:00
name: Slashene
avatar: https://disqus.com/api/users/avatars/Slashene.jpg
message: <p>I agree with the fact that when we do unit testing on domain object, we mustn't check if the database is really updated.<br>But how can you do when you want to test that your config file, is well read ?<br>My response is simple, and use unit test which are already written :<br> Customer data = new Customer()<br>    data.Name = "John Smith"<br>    data.Address = "123 Main St."  //new address<br>  <br> IDataLayer obj = TestFactory.Create&lt;idatalayer&gt;();<br> obj.UpdateCustomer(db, data);<br> Assert(obj.RetrieveByName(data.Name).Address == "123 Main ST")...<br>The TestFactory will be in the config Test, and this test will be run for each IDataLayer possible.<br>Example of test config :<br>&lt;testfactory&gt;<br> &lt;unit name="myTestMethod"&gt;<br>   &lt;register type="DataLayerObjectMock" builder="BuilderOfObjectMock"/&gt;<br>   &lt;register type="DataLayerObjectDBAccess" builder="BuilderOfDBAccess"/&gt;<br> &lt;/unit&gt;<br>&lt;/testfactory&gt;<br>Sound like ioc...<br>In this case, first the test just use a mock, and when DataLayerObjectDBAccess must be tested add just one line to the config file.<br>When you run your unit test, the business logic will be tested with the mock, and your real data layer object will be tested too.<br>What do you think about this solution ?<br>(sorry if my english is not perfect !)<br><br><br></p>
