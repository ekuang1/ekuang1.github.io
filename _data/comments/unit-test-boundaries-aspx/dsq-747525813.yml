id: dsq-747525813
date: 2008-07-22T01:12:39.0000000-07:00
name: superjason
avatar: https://disqus.com/api/users/avatars/superjason.jpg
message: <p>Jim, I've been in that situation. At our company, we ended up writing unit tests specifically for the stored procedures, but they were difficult to maintain, slow, and generally not well maintained.<br>You have to make the decision if it's really worth having the logic in your stored procedures. I'm 99% confident that you're in a situation that you can't easily change overnight. You might have no choice but to fall back on traditional integration testing. That's typically how cross-boundary problems are tested, and why you try to minimize the cross boundary coupling.<br>Think of SQL as a different language that doesn't have a unit testing framework. You're trying to test it from .NET, so it's never going to be ideal.<br>Phil, I feel like I'm posting too many links now, but I think it relates to Jim's question:<br><a href="http://www.ytechie.com/2008/05/stored-procedure-reporting-scalability.html" rel="nofollow noopener" title="http://www.ytechie.com/2008/05/stored-procedure-reporting-scalability.html">Stored procedure reporting scalability</a>. In that post, I talk about the situation at the old company I used to work for, which sounds exactly like what Jim is talking about. I've heard the save logic before.</p>
