id: dsq-747529957
date: 2009-09-03T04:52:00.0000000-07:00
name: Brian H. Madsen
avatar: https://disqus.com/api/users/avatars/Brian H. Madsen.jpg
message: <p>ahhhh...some of these replies brings me back to the time(s) where you hear developers spout sentences like "VIM is the best IDE for development" or "Notepad rocks, i write all my code in Notepad".<br>seriously - a language has to evolve, otherwise it'll be superseeded by something else 3-5 years down the track.<br>I know PHP is still alive, but how slow has it been in the evolutionary chain? and why is that? because some has put the "pure white hat" on and dictated what it should evolve to (or rather, not evolve to).<br>Remember, that for all sense and purposes, a language is a toolbox. You might not use all the tools available to you, but you'd rue the day when you actually needed one of them. Imagine putting a shed up in the backyard, and all you had was a shovel. <br>There's bound to be "purists" that claim their stance is for the "better of the community"...unless these "purists" are the sole reflective voice for the community, then it's null and void - and frankly, how many people can say they speak for everybody and take every single equation into account?<br>Yes, when new features come out there's bound to be a "flood of sin" with overuse of a feature..be it "var" or "lambda expressions" - but that's curiosity (which in many cases like this, kills the cat) causing it - sometimes it's fascination of a new feature that grows into an obsession, but should these cases really dictate the pros and cons of how a language evolves?<br>those of you who counts yourself as excellent developers, wouldn't be using a feature in excess..you know how to apply the language in the best way to reach a goal..<br>As the saying goes - use the right tools, for the right job....<br>Would i see a reason to use "dynamic"? yes, certainly...would i use it to the exclusion of all others? no.<br>@Rob, one small comment (and yes i know, i'm a little fish in the big pond)...when deciding on what language/platform to use for a project, do you look at it as a 80/20 rule or would you choose something like PHP because it handled a single instance/situation better? I doubt that you would, seeing as you're a smart cookie (way smarter than me as well)..<br>i firmly believe that the more features a language/platform has, the  better equipped it is to handle the myriad of project types out there - making the choice of platform easier for me...why swap language if you don't have to? why resist a language having more and more features? because of bloat? bloat is identified as features that does NOT make a contribution to the usage of the language - it does not mean having features in there that's useful for a given situation.<br>to all others - the "back in the good ol' days" comments just shows your ages fellas...there's a reason that the combustion engine took over from the draft horse.</p>
