id: dsq-747529931
date: 2009-09-02T07:59:00.0000000-07:00
name: Mark Hoffman
avatar: https://disqus.com/api/users/avatars/Mark Hoffman.jpg
message: <p>@Bryan - Strawman? What are some of these "core scenarios" that you are referring to? What pain points is this solving?<br>I see these types of "features" make it easy to throw good design and OOP principles out of the window and just say "Good design is hard. Oh to hell with it. Let's just toss in a dynamic and call it a day." I've seen reflection abused this way because the developer simply didn't understand how to build and design something properly and reflection provided a shortcut. Dynamic makes it even easier.<br>Yes, bad code is impossible to eliminate and that can't be a reason to stop the progress of language. But I don't see how this is progress. I largely see it as a way for people to hack together something to make it work.<br>Don't get me wrong. I like dynamic languages. I'm currently knee-deep in Objective-C and iPhone development and I look longingly to Ruby which strikes me as a beautiful language. But mixing them like this in the same language? I see it bringing much more pain than progress.   <br></p>
