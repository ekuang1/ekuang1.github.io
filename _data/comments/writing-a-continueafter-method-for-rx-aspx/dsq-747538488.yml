id: dsq-747538488
date: 2012-10-18T13:55:09.0000000-07:00
name: Jordon
avatar: https://disqus.com/api/users/avatars/Jordon.jpg
message: "<p>I am Sorry to ask this here, but you are the best person to answer this question, I will appreciate if you can help me with this. THank you.<br>I have been hearing from people that <a href=\"http://asp.net\" rel=\"nofollow noopener\" title=\"asp.net\">asp.net</a> mvc has full control over traditional <a href=\"http://asp.net\" rel=\"nofollow noopener\" title=\"asp.net\">asp.net</a> webforms and that is best reason to do programming in <a href=\"http://asp.net\" rel=\"nofollow noopener\" title=\"asp.net\">asp.net</a> mvc.<br><br>Based on this my Question<br>1) I believe Ado.Net has more/full control over ORM then what is the reason of using ORM, when we believe in having full control of what we are doing...<br>2) One obvious advantage i can see with ORM is we can switch database (Eg: Oracle to SQL Server) without changing anything in code, but argument is this is big decision and I don't think anyone keep changing their databases so frequently than I don't think it is truly an advantage.<br>3) RAD development with ORM, but since we want full control it is worth spending time on doing things manually and with defined strategy of doing this we can develop things faster.<br>4) I have seen in past that Microsoft keep on Recommending so many things and after sometime it comes from microsoft itself that, that is not recommended to use and you should use something else... Is it Microsoft Sales strategy.<br><a href=\"http://Asp.net\" rel=\"nofollow noopener\" title=\"Asp.net\">Asp.net</a> MVC vs <a href=\"http://Asp.net\" rel=\"nofollow noopener\" title=\"Asp.net\">Asp.net</a> Web Form <br>1) With release of .Net 4.0 we can do almost all the things we can do in <a href=\"http://asp.net\" rel=\"nofollow noopener\" title=\"asp.net\">asp.net</a> mvc and on top of it we have advantage of RAD when we are doing it with <a href=\"http://asp.net\" rel=\"nofollow noopener\" title=\"asp.net\">asp.net</a> web forms than what is fun of using <a href=\"http://asp.net\" rel=\"nofollow noopener\" title=\"asp.net\">asp.net</a> mvc architecture.<br>- For ViewState, we can turn it off <br>- For Having full control on HTML, we can generate HTML by dynamically creating controls (By this method we can achieve full control on HTML)<br>- We have clean seperation of UI vs Code, since in Web Forms we are not using any Code logic<br>- We have Routing for web forms too so that we can have SEO Friendly URL<br>- I have also seen that performance is little degraded with <a href=\"http://asp.net\" rel=\"nofollow noopener\" title=\"asp.net\">asp.net</a> mvc then doing coding with <a href=\"http://asp.net\" rel=\"nofollow noopener\" title=\"asp.net\">asp.net</a> web forms.<br>- MVC is just architecture which we can also do in Web Forms<br>- We can also be TDD compliant with Web Forms<br>- Almost all things which <a href=\"http://asp.net\" rel=\"nofollow noopener\" title=\"asp.net\">asp.net</a> mvc have + advantage of RAD and simplicity of web forms than what is reason on switching to <a href=\"http://asp.net\" rel=\"nofollow noopener\" title=\"asp.net\">asp.net</a> mvc?<br>I truly don't have any convincing answer which can please me towards this new technology... I have seen lot of people run around the buzz which Microsoft creates, but i truly don't see any added value in this...<br>To all the experts, could you please point some light and help me in understanding value of investing time and money in this new technologies.</p>"
