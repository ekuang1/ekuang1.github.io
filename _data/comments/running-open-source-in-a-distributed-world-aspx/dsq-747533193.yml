id: dsq-747533193
date: 2010-10-11T22:25:55.0000000-07:00
name: wekempf
avatar: https://disqus.com/api/users/avatars/wekempf.jpg
message: <p>I haven't read the book to know exactly how the terms are being defined here, but at a high level I don't think DVCSs change things that much. A project still has an "official" repository. This repository still has a limited number of people who can "commit" to it. This would be your committers.<br>Yes, forking is easier. Yes, contributing without being a committer is easier (and maybe most of a project's contributors won't be committers in this model). But quality control is squarely on the shoulders of an "elite" few. Someone makes a pull request and the "committer" is responsible for vetting the change set(s) to ensure they meet the requirements defined for the project. If they don't, either the committer "fixes" things before committing, or rejects the pull request and asks the requester to fix it and submit a new pull request. The process changes a little, but the responsibilities and checks and balances don't.<br>There's definite benefits to the DVCS model. Initially I'd have new contributors on "probation", without commit authority. After they've contributed for a while, and shown to provide quality pull requests, then I'd consider promoting them to be committers. In theory this is what you do with any VCS, the problem is in how difficult it is to contribute without having commit access with a traditional VCS.</p>
