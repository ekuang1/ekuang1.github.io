id: dsq-747533194
date: 2010-10-12T04:55:55.0000000-07:00
name: Dylan Beattie
avatar: https://disqus.com/api/users/avatars/Dylan Beattie.jpg
message: <p>I think that for a project to gain traction, there needs to be a core developer (or developers) who maintains absolute control over the focus of the project, and an official codebase, with a sensible release schedule, that reflects that focus. It's a tough balance. Accept too many contributions and you end up with feature creep. Release official builds too frequently, and people get fed up with building against a moving target. Accept too few patches or don't release often enough, and people get impatient and fork your project, splintering your potential contributors, your user base, your sense of 'brand identity'.<br>There always going to be people running on the trunk - in fact, one of the things that's nice about github is it makes it easy to maintain your own personal fork of an OS project. Those people aren't the problem.<br>I think the core committers' responsibility should be making sure that each official release is well-defined, bug-free, documented, stable, and sufficiently long-lived that there's time for the community to get to grips with it. The discipline of enforcing feature-freezes and release schedules is what makes an open-source project accessible to people who don't necessarily want to build from source and read the code in lieu of documentation. <br>People who desperately need the latest bleeding-edge pre-alpha features can always cherry-pick from each others' repos. The rest of us just want a stable, documented API that we know isn't going to be deprecated tomorrow by a fresh nightly update that might, or might not, integrate cleanly into our project.<br>In other words, put my vote against "benevolent dictatorship", keep the trunk lean and clean, and release often, but not too often :)</p>
