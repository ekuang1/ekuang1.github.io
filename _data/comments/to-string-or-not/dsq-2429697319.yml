id: dsq-2429697319
date: 2015-12-28T16:02:44.0000000-08:00
name: JaredPar
avatar: https://disqus.com/api/users/avatars/jaredpar.jpg
message: "<p>&gt; To the compiler, these are the exact same thing. So ultimately, it doesn't really matter.</p><p>Usually ...</p><p>The type String is actually not special cased by the compiler in any way.  It is just a type with a name that goes through the normal type name lookup rules.  Hence it can bind to types that are not System.String or even System.String in a different assembly.</p><p>The type string though is special cased by the compiler.  It will be the type System.String in the assembly deemed to be the core library (mscorlib, System.Runtime).</p><p>This means it's possible for String and string to be different types.  For example:</p><p><a href=\"https://dotnetfiddle.net/4DRFNk\" rel=\"nofollow noopener\" title=\"https://dotnetfiddle.net/4DRFNk\">https://dotnetfiddle.net/4D...</a><br><a href=\"https://dotnetfiddle.net/ai6UtD\" rel=\"nofollow noopener\" title=\"https://dotnetfiddle.net/ai6UtD\">https://dotnetfiddle.net/ai...</a></p><p>This is actually why I prefer string over String: it's unambiguous.  Code which uses string will bind to the type I expect no matter what context it is used in.  String though is subject to interpretation.</p>"
