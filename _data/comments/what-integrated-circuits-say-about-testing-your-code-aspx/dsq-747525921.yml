id: dsq-747525921
date: 2008-08-13T05:16:52.0000000-07:00
name: haacked
avatar: https://github.com/haacked.png?size=120
message: <p>I don't think the micro-processor analogy is silly. Your customers don't see microprocessors, they see cell-phones, set-top boxes. These things happen to be made up of components such as microprocessors which <em>need to be tested in isolation</em>.<br>I was a consultant for many years for paying customers, probably like yours, with tight deadlines and dollars on the line. And I wrote unit tests, not as an academic exercise, but because it helped me meet the deadlines with quality code.<br>I think the debate between "practical" vs "ivory tower" is a false one. The reason that this sort of TDD style development doesn't seem practical in a deadline driven development project is because it <strong>isn't</strong>, if you're completely new to it. But if you can practice it on the side somehow, and get very good at it, you realize it is a very practical technique.<br>I'm not saying it's <em>required</em> to deliver value to your customers. Many consultants I know do so. I'm suggesting it's a useful tool that is very practical for delivering value to your customers. And it is similar to a tradition of delivering quality well established with microprocessor engineering.</p>
