id: dsq-747519125
date: 2007-03-12T17:04:13.0000000-07:00
name: rams
avatar: https://disqus.com/api/users/avatars/rams.jpg
message: <p>I don't understand all this opposition to TDD. Does it stem from the fact that it's "new", not many people know it or practice it? <br>Whenever I pitch TDD to fellow developers, the immediate response is "I can write tests that pass, so what good is it". I just respond "You have missed the point" and move on. <br>TDD is not an end-all soultion to preventing bugs in your software. It's just another tool that aids in improving the confidence in your code. In a typical waterfall model, you have to write and document all unit test cases before you code. And nobody does that. Also, you have to manually run through the scenarios. <br>Only a few people write perfect code. For the rest of us, its write, run, test, bomb, debug, refactor. Each refactor will need to be run through all the scenarios. If the scenarios are in your head, it's highly likely that 2 weeks later you wont remember half of them. This is where TDD helps. And yes TDD does add to your schedule. <br>I am all for any methodology that helps me improve my code and increase the confidence level, provided it does not come with too much overhead. <br>Yes, seeing the green lights is not the end, your code still has to work when it's all put together as a system.</p>
