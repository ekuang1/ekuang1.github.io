id: dsq-820200909
replyToId: dsq-819905220
date: 2013-03-05T10:37:48.0000000-08:00
name: Vitoc
avatar: https://disqus.com/api/users/avatars/Vitoc.jpg
message: <p>I've got another example, and this one is slightly less business oriented.  I've created a free online multiplayer text-based RPG as a personal hobby.  It's currently in beta testing where we have 100+ players willing to play the game knowing full well there could potentially be bugs (and with the understanding they should be willing to report those bugs when they do find them).  Sure, I could try to set aside more of my spare time and painstakingly go through every new section of code I write, trying to account for every possible bug condition possible.  Or... I could step through the code a couple times, be fairly confident it meets the requirement, and count on a form of crowd-sourcing to help me find the more complex multi-condition bugs that potentially could have taken me weeks to find on my own as the primary developer.  Many of the players have many more hours in their days to play through and find bugs while I'm at work (this is a side project), whereas I can only allocate my spare time.</p><p>I'm not advocating developers shouldn't test their code.  I'm simply making the point sometimes it does make more sense for developers to offload some of the more involved testing onto QA and other resources.  Costs and time-availability are two factors (among others I'm sure) to consider.</p>
