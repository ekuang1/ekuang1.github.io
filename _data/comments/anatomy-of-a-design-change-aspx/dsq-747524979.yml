id: dsq-747524979
date: 2008-04-24T22:21:56.0000000-07:00
name: Stephen
avatar: https://disqus.com/api/users/avatars/Stephen.jpg
message: <p>While I understand the reason this was done, and I've often found I've been really proud at how clean something worked out, only to later realize that, while clean.. its actual goal didn't really make sense..<br>WCF is a good comparison to this in that WCF took the route to be explicit.. everything has to be explicitly marked to be callable.<br>Of course it isn't likely to change back, but personally I would of preferred an attribute to state what IS an action..<br>I spent a lot of time thinking about the MVC in comparison to WCF.. for example, what about controllers that were only defined by an attribute? no inheritance.. the controller currently actually holds a lot of the execution handling, and makes them a bit messy.. in what I see as a controller.. it should be related only to what you define...<br>WCF then lets you get context via static methods (much like how one would use HttpContext.Current).. they have OperationContext etc etc..<br>It just appeared to me that WCF has a lot in common here.. services vs controllers.. they are highly similar concepts.. and WCF is such a clean implementation I would of liked the MVC to follow..<br>However, I've never built an MVC, so you guys probably have a list of reasons why the MVC shouldn't be inspired by WCF..</p>
