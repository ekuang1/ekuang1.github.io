id: dsq-747522084
date: 2008-10-17T19:52:22.0000000-07:00
name: Bear
avatar: https://disqus.com/api/users/avatars/Bear.jpg
message: "<p>oh dear oh dear — The question of whether the effort is worthwhile is valid one, after all mickey@disney.com is valid in terms of the RFC or STD but is almost certainly not the address of someone completing your form! But why do so many people feel it necessary to go on about how impossible, rather than how pointless, this is and then cite other peoples failed attempts at proof rather than get on with a serious attempt of their own!<br>As for hard coding TLDs into the expression — personally, I don't fancy having to keep track of the creation of new TLDs and updating my expressions when I know what the rules are that TLDs will have to follow. The only possible reason to go as far as to account for individual TLDs is if you then branch your code and include expressions to account for each TLDs domain name restrictions.<br>I'd be interested to hear any faults with my expression beyond the limitations I already admitted and the only other remaining hurdle: internationalisation, which is poorly documented but important and will become even more important once ICANN complete their evaluation period for IDN TLDs (<a href=\"http://idn.icann.org/\" rel=\"nofollow noopener\" title=\"http://idn.icann.org/\">http://idn.icann.org/</a>).<br>The following may be easier to follow as it excludes the alternation on the domain side that accounts for Address-Literals as this accounts for the bulk of the expression:<br><code>([^()&lt;&gt;@,;:\\\\\".[\\]\\x00-\\x20\\u007F-\\uFFFF]+(?:\\.[^()&lt;&gt;@,;:\\\\\".[\\]\\x00-\\x20\\u007F-\\uFFFF]+)*|\\\"(?:(?:(?:[\\t ]*\\r\\n)?[\\t ]+)?(?:[^\\x00\\t\\n\\r \"\\\\\\u0080-\\uFFFF]|\\\\[^\\n\\r\\u0080-\\uFFFF]))*(?:(?:[\\t ]*\\r\\n)?[\\t ]+)?\\\")@((?:[a-zA-Z](?:[a-zA-Z\\d-]{0,61}[a-zA-Z\\d])?\\.)+[a-zA-Z]{2,})</code></p>"
