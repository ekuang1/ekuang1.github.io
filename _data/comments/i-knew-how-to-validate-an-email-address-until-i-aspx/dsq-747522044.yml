id: dsq-747522044
date: 2007-08-22T13:20:09.0000000-07:00
name: SeanG
avatar: https://disqus.com/api/users/avatars/SeanG.jpg
message: <p>I ran across a website with the full regex built out of the BNF from the rfc and build a C# Method to do this:<br>  /// &lt;summary&gt;<br>    /// RFC822 complaint email address validation.<br>    /// see <a href="http://iamcal.com/publish/articles/php/parsing_email/" rel="nofollow noopener" title="http://iamcal.com/publish/articles/php/parsing_email/">http://iamcal.com/publish/a...</a> for explaination<br>    /// &lt;/summary&gt;<br>    /// &lt;param name="emailAddress"&gt;the email address to check&lt;/param&gt;<br>    /// &lt;returns&gt;false if not valid email address, true otherwise&lt;/returns&gt;<br>    private bool ValidEmailAddress(string emailAddress)<br>    {<br>      string qtext = "[^\\x0d\\x22\\x5c\\x80-\\xff]"; // &lt;any CHAR excepting &lt;"&gt;, "\" &amp; CR, and including linear-white-space&gt;<br>      string dtext = "[^\\x0d\\x5b-\\x5d\\x80-\\xff]"; // &lt;any CHAR excluding "[", "]", "\" &amp; CR, &amp; including linear-white-space&gt;<br>      string atom = "[^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+"; // *&lt;any CHAR except specials, SPACE and CTLs&gt;<br>      string quoted_pair = "\\x5c[\\x00-\\x7f]"; // "\" CHAR <br>      string quoted_string = string.Format("\\x22({0}|{1})*\\x22", qtext, quoted_pair); // &lt;"&gt; *(qtext/quoted-pair) &lt;"&gt;<br>      string word = string.Format("({0}|{1})", atom, quoted_string); //atom / quoted-string<br>      string domain_literal = string.Format("\\x5b({0}|{1})*\\x5d", dtext, quoted_pair); // "[" *(dtext / quoted-pair) "]"<br>      string domain_ref = atom; // atom  <br>      string sub_domain = string.Format("({0}|{1})", domain_ref, domain_literal); // domain-ref / domain-literal<br>      string domain = string.Format("{0}(\\x2e{0})*", sub_domain); // sub-domain *("." sub-domain)<br>      string local_part = string.Format("{0}(\\x2e{0})*", word); // word *("." word) <br>      string addr_spec = string.Format("{0}\\x40{1}", local_part, domain); //local-part "@" domain<br>      Regex re = new Regex(string.Format("^{0}$", addr_spec));<br>      return re.IsMatch(emailAddress);<br>    }</p>
