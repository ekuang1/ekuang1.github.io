id: dsq-747509294
date: 2004-08-10T02:04:00.0000000-07:00
name: Steve Griffin
avatar: https://disqus.com/api/users/avatars/Steve Griffin.jpg
message: <p>I've had the chance to implement this particular "Pattern &amp; Practice" at two different companies.  My personal experience is that the methodology works great....but the hard part is getting the developers to use it properly and embrace a "formalized" practice.  Both shops I helped implement this at were of the "run-and-gun" type that coded on-the-fly and had no formal practice of working in a true "group" environment.  But, once everything was put into place and the methodology was in full swing, the developers quickly saw that "formalization" of team development was a blessing in disguise.<br><br><br><br>Additionally, the end-users we worked with also had to learn that any fixes that we implemented would not be rolled out immediately.  We generally had a structured release schedule once a month (duration could be tweaked to fit your situation) for all fixes that were to go out instead of hot-fixing things on the fly.  I guess my advice on this point is to be prepared to not only move developers over to the "formalized" process...but your end-users who are expecting patches as well.<br><br><br><br>There are a number of things throughout the practice that we customized to fit the situtation.  For example,  we automated the build process by writing our own custom build program instead of using the suggested "BuildIt" program listed in the   Patterns &amp; Practices document.  We also added the maintaining of all database change scripts to the process as well which is pretty much left out of the P&amp;P document.  One of the most important things we added to the practice was the use of a bug-tracking system that integrated directly into Visual Studio .NET.  I believe we used a product called "Bug Tracker."<br><br><br><br>Overall, once things are in place and customizations to the practice are made, I think it is a great methodology and I highly recommend it for formalizing a development process in a Visual Studio environment.  Good Luck!!</p>
