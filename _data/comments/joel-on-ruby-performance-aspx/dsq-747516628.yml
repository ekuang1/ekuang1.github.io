id: dsq-747516628
date: 2006-10-02T19:26:38.0000000-07:00
name: leemic
avatar: https://disqus.com/api/users/avatars/leemic.jpg
message: <p>I am not going to rant - Joel has a point - It looks like Ruby has not been optimized - period.<br>Let's put it this way - I just created a simple script that takes in tab-delimited format and converted to pipe delimited format - yes - I'm newbie - after running it through ruby - it took one hour.  So I rewrote using perl - it ran about 30% to 35% faster.  I checked CPU usage - both of them are pegging one CPU.<br>I ran through profile - no obvious bottle neck.<br>I also tried to use 'ActiveRecord' of Rails as standalone library - the performance was awful for doing millions inserts - At first I thought it could be DB - but after duck-typing the connector not to send any SQL to server [ eliminate actual database call ], it did not reduce the runtime - only by 10% to 15%.  So I digged deeper and found out that it was spending a lot of time on 'Interger#gcd' which was called by Rational object.  Playing around the code - I found the culprit - DateTime.  I was using one field - datetime and creating dynamic SQL just gets killed by DateTime.  After removing DateTime - the performance was acceptable - I switched to Time object - the performance was still descent.  DateTime is not optimized.<br> <br>I'm about to give up using Ruby for my dataware house project.  I am going back to either Perl or Java - probably Java because b/c it has concurrent library [ Doug Lea - you are the man ] so I can run parsing and db call via separate native threads.  It is sad - I really liked 'duck-typing.<br></p>
