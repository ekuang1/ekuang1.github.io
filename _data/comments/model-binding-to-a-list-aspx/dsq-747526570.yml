id: dsq-747526570
date: 2008-12-08T03:24:59.0000000-08:00
name: jowen81
avatar: https://disqus.com/api/users/avatars/jowen81.jpg
message: <p>I was having an issue with the DefaultModelBinder in the Beta 1 release when using Linq to SQL objects and the object contained an EntitySet&lt;&gt; property.  The ModelState property would remain valid, but the entity set would never get updated.  Today I discovered what was actually happening, the DefaultModelBinder was adding values directly to the entity set and then setting the entity set reference to itself - which for some reason leaves no entities in the set.<br>Pseudo Code of what's happening in the DefaultModelBinder:<br><code><br>var list = BusinessObject.ObjectList;<br>list.add(new {});<br>...<br>BusinessObject.ObjectList = list;<br></code> <br>To fix the problem, I extended the DefaultModelBinder's BindModelCore method and added the additional check to see if the bindingContext.Model and the propertyResult.Value both contained a reference to the same object.<br><code><br>if (propertyResult.Value != null)<br>{<br>    if (!property.IsReadOnly<br>        // don't set if the property was updated directly<br>        // E.g. elements added directly to a collection reference.<br>        &amp;&amp; !ReferenceEquals(property.GetValue(bindingContext.Model), propertyResult.Value))<br>    {<br>        shouldCallSetValue = true;<br>    }<br>}<br>else<br>{<br>    ...<br></code><br>Is anyone else having this problem?  Is there a better way to handle this?</p>
