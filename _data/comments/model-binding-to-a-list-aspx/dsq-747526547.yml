id: dsq-747526547
date: 2008-10-24T01:06:37.0000000-07:00
name: levib
avatar: https://disqus.com/api/users/avatars/levib.jpg
message: <p>Phil asked me to take a look at the comments and to give some feedback.  Hopefully this will answer some of the questions. :)<br>@Gauthier - At the moment, the hidden index field is mandatory for binding lists of complex types (e.g. types that aren't structs or strings).  This is due to a current limitation of the IValueProvider interface.  We're considering changing the IValueProvider to make it slightly more powerful, which will negate the need for the hidden field.  Also, AFAIK the HTML forms spec doesn't mandate an order, but in practice all browsers post the values in the order in which they appear in the document.<br>@Matt - Can you provide a simple repro of the problem you're experiencing?  We've gone to great lengths to make sure that nullable types work properly, but it's possible that our tests missed something.<br>@Vladan - What are you trying to do here?  The [Bind] attribute is sealed because it's a simple metadata attribute; there should be no need to subclass it.  Did you instead mean to subclass the abstract CustomModelBinderAttribute type?<br>@Ben - The index in the form is distinct from the index in the generated list.  The index in the form is allowed to be any arbitrary string, but we'll always convert these to a zero-based list.  It's the ordering that matters.<br>@Melvyn - I've been hitting my head against a wall trying to read the spec.  Suffice it to say that DTDs aren't my native tongue. :)  At any rate, note that at the moment we don't have helpers that generate the [] syntax (and in fact, we have an open bug regarding the fact that ViewData.Eval() has its own syntax for specifying indexes).  Also, note that the MVC HTML helpers are actually <em>XHTML</em> helpers.  Some of the helpers do not produce valid HTML 4.01, but they all [should] produce valid XHTML 1.0.</p>
