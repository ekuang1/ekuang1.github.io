id: dsq-747526549
date: 2008-10-24T03:43:48.0000000-07:00
name: Vladan Strigo
avatar: https://disqus.com/api/users/avatars/Vladan Strigo.jpg
message: '<p>Levib/Phil,<br>I am trying to roll out my own impl. which has an additional parameter called FetchBehavior.<br>Now, what I want is when someone defines a [FetchAndBind] attribute that it does everything [Bind] does and more (basically gets also a new FetchBehavior param and assigns a special kind of IBinder).<br>The problem is that in methods:<br><br>        private static string GetFieldPrefix(ParameterInfo parameterInfo) {<br>            BindAttribute attr = (BindAttribute)Attribute.GetCustomAttribute(parameterInfo, typeof(BindAttribute));<br>            return ((attr != null) &amp;&amp; (attr.Prefix != null)) ? attr.Prefix : parameterInfo.Name;<br>        }<br>        private static Predicate&lt;string&gt; GetPropertyFilter(ParameterInfo parameterInfo) {<br>            BindAttribute attr = (BindAttribute)Attribute.GetCustomAttribute(parameterInfo, typeof(BindAttribute));<br>            return (attr != null) ? (Predicate&lt;string&gt;)attr.IsPropertyAllowed : null;<br>        }<br><br>your relying on an direct implementation of BindAttribute. Now, if I want to reuse the logic of IsPropertyAllowed and ModelName, my attribute must subclass BindAttribute. And that cannot be done.<br>Is that any clearer? Please let me know if I was not able to explain, I will create a code sample of what I want to achieve.<br><br>Thanks!<br><br>Vladan</p>'
