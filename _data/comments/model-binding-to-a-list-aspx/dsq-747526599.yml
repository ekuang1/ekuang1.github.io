id: dsq-747526599
date: 2010-06-12T14:20:33.0000000-07:00
name: Adam
avatar: https://disqus.com/api/users/avatars/Adam.jpg
message: <p>Oi Haack!<br>How come TryUpdateModel doesn't bind to a list?<br>e.g.<br>var stuffs = _db.Stuff.Where(p =&gt; knownIds.Contains(p.stuffId)).OrderBy(p =&gt; p.stuffId);<br>if (TryUpdateModel(stuffs)) {<br>       // Updated objects, not new ones!<br>}<br>else {<br>}<br>I don't need saving from myself...<br>Also! Wouldn't the metadata model would be better if you had a metadata register. Then you don't (always) need to use data-annotations / attributes when using strongly typed helpers.<br>e.g.<br>MetaData.MataDataValues[typeof(Chilli)]["HotnessRating"] = "Hotness Rating";<br>Or using one of those dynamic doo-dars perhaps for people who don't like straight squared backets.<br>MetaData.MataDataValues[typeof(Chilli)].HotnessRating = "Hotness Rating";<br>Don't get me wrong guys if you like Data Annotations, great. If you use IDataErrorInfo and you've got some wierd validation going on, the above would work great too and it's tidy. Kinda looks like how ModelBinder dictionaries work.<br>Also!<br>HtmlHelper is aweful. Most of the time you have to type a gazillion dots just to get basic things you need. Like the HttpContextBase or HttpRequestBase. The C# monks want to burn me at stake for dis-obeying the commandment of demiter.<br>If you could get at querystring variables through the RouteData that'd be quite good.<br>HtmlHelper&lt;T&gt; is also aweful. If you want to write expression based helpers you have to go all over the place to the job. Use some static expression helper, then some metadata or something. How come this isn't all in the same place since it's all related.<br>Mr Phil, you're normally meticulous, but a few small parts of MVC2 seem like they've been haacked together. What went wrong? I'm sure it was probably Brad's fault.</p>
