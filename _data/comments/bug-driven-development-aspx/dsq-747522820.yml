id: dsq-747522820
date: 2007-09-24T16:01:05.0000000-07:00
name: Frans Bouma
avatar: https://disqus.com/api/users/avatars/Frans Bouma.jpg
message: "<p>I'm all for weeding out bugs early on as much as possible, and unit tests can help. However, the focus should be on weeding out bugs, not on writing tests. The thing is: writing tests is OK, but will never be enough to squash most bugs, simply because some software will simply require an unlimited amount of tests to be sure all bugs are gone. <br>What helps more is proof that the software written is correct. This is tedious work as well, but can also be done earlier on. So added to the tests which can show that the software changes and new feature(s) are indeed working in the context of the tests (because that's what you're testing), you have to have proof that the code is correct. Proving that code is correct isn't that hard, it just takes time. But lacking proof and thinking the tests are the proof is a mistake: the tests only proof what's tested in the tests. If you think the tests combined define 100% of the cases the software will be used in, you're mistaken as well. A simple multi-db oriented o/r mapper API alone has an unlimited amount of corner cases where it can go wrong, so you need proof that a routine is correct.</p>"
