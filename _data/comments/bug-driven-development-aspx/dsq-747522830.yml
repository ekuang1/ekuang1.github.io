id: dsq-747522830
date: 2007-09-27T08:47:15.0000000-07:00
name: Michael White
avatar: https://disqus.com/api/users/avatars/Michael White.jpg
message: '<p>Granted, this definitely does NOT solve the problems involved in working with legacy code - but building at solid framework WITH tests, and basing your application code on that framework will work wonders. By tests I do not simply mean test methods that are intended to catch bugs but rather test in a QA fashion. Build mini-apps that take care of feature A, B, C etc. The features these mini-apps are tests for are the features that are contained directly in the framework base code. Anything outside of that is project based testing. Frameworks take various time scales to develop and test thoroughly depending on size - but once you have your framework running smoothly, you will find your bug count drop considerably, and if you have a framework of really useful code then application development time will drop considerably as well. This reduces overall time tremendously in most cases. I have done a few projects now on a framework I designed and it has cut development by 2/3 and testing finds and extremely low number of bugs that are usually very easy to find and fix.<br>Final point: There is no single "best" way to do anything. Often it is project based and you just have to hand pick the methodology and systems you (and your team) work best with.</p>'
