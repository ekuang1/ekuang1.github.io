id: dsq-1403908158
replyToId: dsq-747535268
date: 2014-05-25T13:27:10.0000000-07:00
name: Andrew Dennison
avatar: https://disqus.com/api/users/avatars/andrewdennison.jpg
message: <p>I agree completely. If you re-format/re-order my code, you own it.</p><p>Style is where my<br>perfectionism really bites me. Before I expose my code to fellow developers, I<br>want it to look right. But it is about the dumbest thing to do on existing<br>code. Tweaking some white space may be tolerated, but wide scale changing of<br>line-breaks, and re-ordering of methods will earn you nothing but<br>"blame".</p><p>Blame is a command in<br>subversion, RCS and others that shows who touched what last. Some source<br>control systems have a command with a more polite name like annotate, but the result<br>is the same. First your boss will be really impressed with your overstated LOC<br>output. Then he will be angry that his lame metric has been exposed as useless.<br>His revenge will be when he starts assigning defects based on who is<br>responsible for the majority of the code.</p><p>There a trick worth<br>knowing when trying to difference 2 versions with a large number of formatting<br>changes. That is to run both versions through the same formatting engine,<br>preferably with the settings used on the second version. Once the formatting<br>and re-ordering differences have been removed, the remaining differences are<br>significant.</p><p>In an ideal world,<br>projects would establish a formatting tool (and settings), and this tool would<br>apply style changes on every check-in. While I have my preferences for<br>settings, just achieving consistency would be a start. On my current project<br>people can't seem to update the Revision History in the header with a<br>consistent date format. The fact that they are adding source control meta-data<br>into the source code rather than the repository should tell you something.</p><p>R# is great in that it<br>finds all sorts of redundant qualifiers, parentheses and "usings". My<br>challenge is to leave other people's code alone unless I want to own it. The<br>problem with being anal is that other's will think of you accordingly. If you<br>find a bug in my code fine, but don't make superficial changes to my code and<br>claim that you have actually added value.</p><p>I just spent a few minutes trying to fix the wrapping of this post! I really need to get out more.</p>
