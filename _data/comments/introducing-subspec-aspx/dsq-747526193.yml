id: dsq-747526193
date: 2008-08-25T23:24:01.0000000-07:00
name: Troy Howard
avatar: https://disqus.com/api/users/avatars/Troy Howard.jpg
message: "<p>Hmm... I'll preface my comment with the statement that I don't know anything at all about BDD other than what I've read here and at the links presented here...<br>That said, I find the discussion between Phil and Scott interesting, and I'm having trouble agreeing or disagreeing with either of them completely.<br>I agree with Phil, that I like to learn by diving into something. I also enjoy when newbies propose radical changes to elements of a system that irk them while learning it. I think that's a great way to evolve an established system to be more intuitive and end-user focused. <br>I agree with Scott that changes to an established system should be made from a considered standpoint, by someone who understands the full scope of the system, and it's intended use. <br>I agree with Scott that famous people can have a greater impact on society than they know and thus must act with a greater level of responsibility.<br>I disagree with Scott that Phil is famous enough to worry about. <br>I agree with Phil that using his modicum of fame to present these ideas to a wider audience through the process of critical discourse is the best use of said fame.<br>He's basically got two great resources: his quick wit and sharp intellect, and his readership that he gained by using the former. I think he's using both of these things in the best way possible to support this new idea of BDD.<br>It also occurs to me that what he's doing is exactly the spirit of BDD, since the thing that makes BDD unique is that it focuses on the semantics of expressing a specification vs writing a test. Phil seems to be focused on making sure that the syntax used to express that spec is not destroy the semantic advantage of BDD over TDD. <br>It occurs to me that this a good case for a DSL, instead of trying to make various programming languages express something in ways that aren't intuitive to their syntax. <br>Anyhow... My opinions about this discussion aren't really significant, since I have no idea what I'm talking about, really. <br>BUT...<br>With all that in the back of my head, as I read the PDF by Dave Astel, I came across this bit that seemed relevant (top of page 4):<br>\" So if it's not about testing, what's it about?<br>It's about figuring out what you are trying to do before you run off half-cocked to try to do it. \"<br><br>I get the feeling that's the gist of Scott's objections. <br>So I propose this as homework for Phil... Start a project to write a set of BDD specs for BDD. The spec will describe what a BDD framework's behaviours \"should be\". Then, using that spec, we can test the existing implementations, including Phil's syntax.<br>We can all be part of the creation of that spec, and I'd love to see Scott's input on that.</p>"
