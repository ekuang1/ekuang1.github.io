id: dsq-747526810
date: 2009-01-16T01:17:21.0000000-08:00
name: STGF
avatar: https://disqus.com/api/users/avatars/STGF.jpg
message: <p>I tried implementing Phil's Areas Demo in my project <a href="https://haacked.com/archive/2008/11/04/areas-in-aspnetmvc.aspx" rel="nofollow noopener" title="https://haacked.com/archive/2008/11/04/areas-in-aspnetmvc.aspx">haacked.com/.../areas-in-aspnetmvc.aspx</a>.<br>I appended the Areas/Blog structure in my existing MVC project and I get the following error in my project.<br>The controller name 'Home' is ambiguous between the following types:<br>WebMVC.Controllers.HomeController<br>WebMVC.Areas.Blogs.Controllers.HomeController <br><br>this is how my global.asax looks.<br>public static void RegisterRoutes(RouteCollection routes)<br>        {<br>            routes.IgnoreRoute("{resource}.axd/{*pathInfo}");<br>            routes.MapAreas("{controller}/{action}/{id}",<br>                "WebMVC.Areas.Blogs",<br>                new[] { "Blogs", "Forums" });<br>            routes.MapRootArea("{controller}/{action}/{id}",<br>                "WebMVC",<br>                new { controller = "Home", action = "Index", id = "" });<br>            //routes.MapRoute(<br>            //    "Default",   // Route name<br>            //    "{controller}/{action}/{id}",// URL with parameters<br>            //    new { controller = "Home", action = "Index", id = "" }  <br>            //            // Parameter defaults<br>            //);<br>        }<br>        protected void Application_Start()<br>        {<br>            String assemblyName = Assembly.GetExecutingAssembly().CodeBase;<br>            String path = new Uri(assemblyName).LocalPath;<br>            Directory.SetCurrentDirectory(Path.GetDirectoryName(path));<br>            ViewEngines.Engines.Clear();<br>            ViewEngines.Engines.Add(new AreaViewEngine());<br>                      RegisterRoutes(RouteTable.Routes);<br>           // RouteDebug.RouteDebugger.RewriteRoutesForTesting(RouteTable.Routes);<br>        }<br>If I remove the /Areas/Blogs from  routes.MapAreas , it looks at the Index of the root.<br></p>
