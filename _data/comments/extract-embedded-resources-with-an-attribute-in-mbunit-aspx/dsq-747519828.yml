id: dsq-747519828
date: 2007-05-17T03:21:31.0000000-07:00
name: Rob Cecil
avatar: https://disqus.com/api/users/avatars/Rob Cecil.jpg
message: <p>I would suggest some small changes to your ExtractResourceAttribute.cs<br>1. Decorating the ExtractResourceRunInvoker.Execute() with       [System.Diagnostics.DebuggerNonUserCodeAttribute( )]<br>(and others that may benefit)<br>2. Change Execute() to:<br>public override object Execute( object o, IList args )<br>      {<br>        Assembly assembly = attribute.Type.Assembly;<br>        using ( Stream stream = assembly.GetManifestResourceStream( attribute.ResourceName ) )<br>        {<br>          try<br>          {<br>            if ( String.IsNullOrEmpty( attribute.Destination ) )<br>            {<br>              <a href="http://ExtractResourceAttribute.stream" rel="nofollow noopener" title="ExtractResourceAttribute.stream">ExtractResourceAttribute.st...</a> = stream;<br>              return this.Invoker.Execute( o, args );<br>            }<br>            else<br>            {<br>              WriteResourceToFile( stream );<br>            }<br>          }<br>          catch ( TargetInvocationException tie )<br>          {<br>            if ( tie.InnerException != null )<br>            {<br>              throw new Exception( tie.InnerException.Message, tie.InnerException );<br>            }<br>            throw;<br>          }<br>        }<br>        try<br>        {<br>          return this.Invoker.Execute( o, args );<br>        }<br>        catch ( TargetInvocationException tie )<br>        {<br>          if ( tie.InnerException != null )<br>          {<br>            throw new Exception( tie.InnerException.Message, tie.InnerException );<br>          }<br>          throw;<br>        }<br>        finally<br>        {<br>          if ( attribute.ResourceCleanup == ResourceCleanup.DeleteAfterTest )<br>            File.Delete( attribute.Destination );<br>        }<br>      }<br>Which means I never have to see TargetInvocationException unless there isn't a useful InnerException.</p>
