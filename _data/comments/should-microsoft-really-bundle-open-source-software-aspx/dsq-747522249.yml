id: dsq-747522249
date: 2007-09-10T19:55:15.0000000-07:00
name: Matt Ellis
avatar: https://disqus.com/api/users/avatars/Matt Ellis.jpg
message: "<p>Microsoft is between a rock and a hard place about this.<br>@Bubb Rubb: Your quote states that the NT TCP/IP stack is <em>derived</em> from BSD Unix. This is not the same as using an open source TCP/IP stack - you can't change it, build it and integrate your new version. Would you have preferred MSTest if it was <em>derived</em> from NUnit (and looking at the API you can argue that it was) or would that cause complaints of Embrace and Extend?<br>Like it or not, Microsoft needs to have control over the direction of their tools. They have too many customers to think of. What happens if a unit testing framework starts going in a direction that goes against MS or it's tools? Doesn't want to make changes so that MS can better integrate it with VS? What if relationships break down so that the framework breaks compatibility with VS and the project folks don't care? MS could either force the project to remain on a parallel course (not advisable!) or create a fork - and how would that affect customers?<br>Personally, if I were Microsoft, I'd want to insulate myself against these things. The arguments don't really stand for Apache or gcc - these are too big and heavy to change so radically. (And bundling with an OS is different to relying on it. OSX would work fine if Ruby for Rails changed or moved on. OSX is effectively just distributing this, not making it part of it's core strategy.) But it could happen very easily; imagine they had bundled nmock v1. (AIUI) v1 is now obsolete, no longer maintained and superceded by v2 which has a totally incompatible syntax. What should MS do in this case?<br>And of course, somtimes, the rewrite is better than the original - (IMHO) msbuild is much nicer than nant (and has a whole load of open source contributions in the way of extra tasks).<br>Oh, and one last thing - <a href=\"http://www.codeplex.com/nunitforvsts\" rel=\"nofollow noopener\" title=\"http://www.codeplex.com/nunitforvsts\">you can run nunit tests as part of VSTS</a>. Not terribly polished, but it's using Microsoft's extensibility points to add another testing framework.<br></p>"
