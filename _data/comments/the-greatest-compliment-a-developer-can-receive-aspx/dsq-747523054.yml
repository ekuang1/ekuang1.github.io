id: dsq-747523054
date: 2007-10-26T06:43:41.0000000-07:00
name: JM
avatar: https://disqus.com/api/users/avatars/JM.jpg
message: <p>I vote for comments, verbose comments.  It helps the man who comes behind.  <br>While reading code directly is fine for Wiz Bang stars it is faster for us mortals to read the comments.  <br>Comments let us understand what the programmer was trying to do, rather than what he did do....  We would not be looking at this again if there was not some problem with it, or it did not need a modification.  <br>Often we need to modify it because it was not as Wiz Bang as it could be or not encapsulated into a callable function, or failed to handle the errors and exceptions that the code gets in the real world.<br>The man who comes to do the code maintenance my be new to the language, or new to the platform, or just new.  Comments help them figure out what the code does, what the coder was trying to do, and how the code interacts with the data and business process.<br>The original coder probably got a word view from design documents, demo code, test code, system test, user testing, etc.  They lived with the process for months and so their brain thinks the business process that is coded into the code.  The poor sod who is dropped in a cube and told to fix, modify or extend the code has none of this rich brain history.  <br>For him the only thing that illuminates the code are comments. <br>Having been on the receiving end of the process, I can tell you that I have never had code handed down to me with too many comments but have often had WAY to little.   <br>If by chance, one day, I do get code with to many comments I will deploy a skill that I learned in school,  I will skim them looking for what is relevant to the problem at hand.  <br>Personally, I have often found my self scratching my head, re-reading the code and the comments and still not understanding the scope of the thing, until I have worked on it some more.<br>I often find my self adding to the prior comments to make it abundantly clear as to what is going on.  <br>I have programed for money. This normally means that I have a boss, and the boss wants to revue what cost him so much. With a well commented code I just hand in the code and go home, knowing that even if I don't know the most optimal way to do something, the boss will perceive, through the comments that progress is being made and that the code is leading to the business solution, or fix de jour.<br>Back when I coded for the IBM basic compiler version 1.0, when the size of your input code was a factor, then it was wise to keep comments in hand.  Since then, source code file size has not been an issue and I can find no good reason, other than showing you are a Smart Ass, for not fully commenting your work.<br>Better 50 lines of code well commented than 200 that are miraculously "self evident", or that appear so to the original coder.  <br>If you are capable of miraculous stuff then you are in the wrong business, for the Catholic Church is desperately in need of your services.<br><br></p>
