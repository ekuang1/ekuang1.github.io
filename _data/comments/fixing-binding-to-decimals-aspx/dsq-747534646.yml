id: dsq-747534646
date: 2011-05-04T21:00:15.0000000-07:00
name: StarTrekRedneck
avatar: https://disqus.com/api/users/avatars/StarTrekRedneck.jpg
message: <p>I had the same issue with enums-- when the default model binder recieves an integer, it will not use that value to fill a property that's an enum. &gt;:( I could make an EnumModelBinder class that handles all enums, but I can't just register a model binder for the type "enum". Instead, I would have to register for each enum type there was...<br>ModelBinders.Binders.Add( typeof( CustomerTypeEnum), ...);<br>ModelBinders.Binders.Add( typeof( ProductTypeEnum), ...);<br>etc.<br>Ick! Perhaps if I could send the Binders.Add method a predicate&lt;System.Type&gt; then I could just "myType =&gt; myType.IsEnum;" But we can't.<br>Google pointed me to a post by Chuck Kinnan on the <a href="http://asp.net" rel="nofollow noopener" title="asp.net">asp.net</a> forums where he created a model binder that inherited from the default binder, overrode the protected GetPropertyValue() method, and handles the conversion there if the property type's IsEnum property is true. He's replacing the default binder with the inherited one. The post with code can be found here:<br><a href="http://forums.asp.net/p/1622895/4180989.aspx" rel="nofollow noopener" title="http://forums.asp.net/p/1622895/4180989.aspx">http://forums.asp.net/p/1622895/4180989.aspx</a><br></p>
