id: dsq-747532509
date: 2010-06-10T02:09:19.0000000-07:00
name: chrido
avatar: https://disqus.com/api/users/avatars/chrido.jpg
message: <p>People just don't get the difference between Enumerators and Lists and which different access guarantees they have. Having the need for that kind of null-check code is a design smell.<br>Have a look at the following sample to get an idea why Enumerators are just not Lists and all the codes shown here do not work:<br>namespace ConsoleApplication1<br>{<br>    class Program<br>    {<br>        static void Main(string[] args)<br>        {<br>            IEnumberalbe&lt;object&gt; someObject = GetSomeObjects(); <br>            <br>            if(!IsNullOrEmpty(someObject))<br>            {<br>                foreach (var o in someObject)<br>                {<br>                    //bamm<br>                }<br>            }<br>        }<br>        public static bool IsNullOrEmpty&lt;T&gt;(IEnumerable&lt;T&gt; items)<br>        {<br>            return items == null || !items.Any();<br>        }<br>        private static bool accessed = false; <br>        public static IEnumerable&lt;object&gt; GetSomeObjects()<br>        {<br>            if(accessed == false)<br>            {<br>                accessed = true;<br>                yield return new object();<br>            }<br>            else<br>            {<br>                throw new NullReferenceException();<br>            }<br>        }<br>    }<br>}<br></p>
