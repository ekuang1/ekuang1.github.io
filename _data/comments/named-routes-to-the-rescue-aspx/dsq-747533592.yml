id: dsq-747533592
date: 2010-11-21T18:37:47.0000000-08:00
name: Martin
avatar: https://disqus.com/api/users/avatars/Martin.jpg
message: <p>Hello Phil,<br>i always do routing by route name, and i always specify the url as strict as possible.<br>I have created some extension methods that can write the controller and action parameters (and more) for me in a secure strongly typed manner.<br>For an example.<br>routes.MapRouteToAction&lt;HomeController&gt;(RouteType.Home, "", x =&gt; x.Index());<br>RouteType is an enum i use to make it easier to use when refering to some route. You could just use a string for the named route.<br>It can automatically get attribute values on the action method and apply if you wish (HttpPost, HttpGet / AcceptVerbs).<br>It can generate the url itself by looking at the controller name and the action method and use some convention like /ControllerName/ActionName, AreaName/ControllerName/ActionName, AreaName/ActionName, or you can specify it manually (because you probably dont want it to change just because you rename your action method).<br>Its a little tricky when it comes to mapping something like /ControllerName/ActionName/{id}. I made a boolean option called allowOptionalParameters, and when set to true, it hooks up the parameters so MyActionMethod(int? id) will be something like<br>routes.MapRouteInfoToAction&lt;HomeController&gt;(RouteType.SomeAction, "myaction", x =&gt; x.MyActionMethod(null));<br>where null is the default value.<br>Hope you understand my examples.<br></p>
