id: dsq-747524315
date: 2008-03-05T20:23:17.0000000-08:00
name: Joe Brinkman
avatar: https://disqus.com/api/users/avatars/Joe Brinkman.jpg
message: <p>@Ayende - My experience on DotNetNuke is that every breaking change has affected dozens of third party vendors and 10s of thousands of users.  While the project may be able to deal with the added support issue, this has created undue burdens for the vendors who may not have the resources to drop everything else to release an updated version of their product to coincide with our release schedule.<br>Also, it is important to note that not all frameworks have the same constraints.  When your framework does not include a large 3rd party vendor community then it is easier to deal with compatability issues, however when your breaking change affects component vendors who build on top of your framework, then the "pain" becomes magnified for both the vendors and the end users.<br>It would be irresponsible of Microsoft not to take backwards compatibility into account when designing their frameworks.  One of the advantages that they enjoy over almost every other development platform is that they have a strong and vibrant component vendor community who provide a ton of value to end developers who don't have to recreate the wheel on every project.  If you don't think that is a big deal, just look at all of comments around WPF and Silverlight 1.0 where developers have complained about the lack of components even to the point of waiting to develop on the platforms until the component vendors had caught up.<br>If you want to kill off the component vendor community then just start releasing frameworks that don't take backwards compatability into account.  You will quickly make it an unprofitable business.</p>
