id: dsq-747524332
date: 2008-03-08T18:47:18.0000000-08:00
name: Morten Mertner
avatar: https://disqus.com/api/users/avatars/Morten Mertner.jpg
message: <p>I was kind of assuming that when you provide a new interface you also provide an implementation for it, and hence you can add functionality by providing new interfaces (inherited or not). The freedom to have base class changes propagate remains even when interfaces are used.<br>Making a functional change that requires changing method signatures or the introduction of new ones affects subclasses of an ABC and interface implementors equally. The key difference between the two is that with interfaces it is much easier to remain backwards compatible even in the face of major changes, because you are free to replace the underlying implementation entirely.<br>Downcasting should also not be an issue. If the interface consumer is aware of the new interface and wants to access it directly, this requires changes in the original code and hence would be better solved by accessing new properties or methods that return the appropriate new interface directly. Introducing such in a derived interface would be a non-breaking change for existing client, who can continue to work with the old interface.<br>I don't get it. I must just not be clever enough :-)</p>
