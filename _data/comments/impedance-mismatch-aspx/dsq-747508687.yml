id: dsq-747508687
date: 2011-04-21T23:04:02.0000000-07:00
name: ffoulks
avatar: https://disqus.com/api/users/avatars/ffoulks.jpg
message: "<p>As has been pointed out, we are dealing here with the figurative use of a technical term. (I realize that engineers have difficulty with the notion of figurative language. An example: When Shakespeare writes \"I [...] trouble deaf heaven with my bootless cries ...\", he is using the notion of unshodness figuratively to represent abjection. When a figurative usage becomes common enough, the term acquires a new literal meaning.)<br>In the very broadest sense, impedance is what happens (figuratively) between two entities when they lack some expected structural similarity. When someone says, \"Well it worked on my machine, why doesn't work on the network?\", we have an impedance problem. In software development, within the time gap between the release of a new database version and the release of the application version that implements it, there is an impedance. The key here is \"expected\". In ordinary circumstances, it is reasonable to expect the application to mirror the database. Pointing out the impedance is a polite way of dealing with some idiot who doesn't understand the difference between the database and the application.<br>In the case of O/R impedance: When we use an automated tool to generate a UI and its CRUD from a database, we are pretending that the UI *is* the reality the database is supposed to represent. We have ignored the actions of the real objects, and when reality sets in in the form of business rules, we end up with an ad hoc mess. We havenâ€™t really saved time by skipping the object level.<br></p>"
