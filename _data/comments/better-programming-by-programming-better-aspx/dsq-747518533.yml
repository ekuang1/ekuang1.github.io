id: dsq-747518533
date: 2007-01-30T05:04:11.0000000-08:00
name: Haacked
avatar: https://github.com/haacked.png?size=120
message: <p>&gt; Until you can quantify code, you can't say <br>&gt; one programmer is better or worse than the other.<br>Really? But you do it all the time, don't you?  Have you ever had to lay off or fire a developer?<br>People generally think of John Carmack and Linus Torvalds as being great coders. If you can't say one programmer is better than another, why hold these developers in high esteem? Why does Google claim to hire the best developers, when they could just hire anyone off the street, if what you say is true?<br>Sure, it is impossible to create some sort of metric for developer aptitude (You have a score of 9321 and I have a score of 9322 so I'm better than you.)  That will never happen.<br>However, I think it is possible to say one developer is better or worse than another in a specific context, when you realize that such a statement comes with a margin of error.<br>Some developers are so far apart from others, that the margin of error is easily overcome. For example, if developer A beats developer B in all measures of productivity and code quality, couldn't we say that developer A is a better developer than developer B?<br>In my book, a good programmer gets things done in a timely manner and makes his clients/customers happy.<br>Does this mean a good developer writes maintainable code? Yes, otherwise when the developer has to maintain the code, he/she can't get things done quickly.<br>Does this mean a good developer is a good problem solver? Well yeah!<br>Does this mean a good developer writes high performance code? Well yes, if that's the thing that needs to get done.</p>
