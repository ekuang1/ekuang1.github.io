id: dsq-1429046108
date: 2014-06-10T12:24:23.0000000-07:00
name: V...
avatar: https://disqus.com/api/users/avatars/V....jpg
message: "<p>Great article. Need to solve similar stuff. Windows service is overkill, if I take in account that most of my task are most to 1 min. length.</p><p>Although there's still a problem not solved: assume you have to execute task in T1, T2 and T3 time. If IIS goes down after T1, task T2, T3 won't be executed. Even if you manage to bring up IIS after T2, T2 task still won't be executed.</p><p>So the long running task problem (or hosting in IIS) must be separated into smaller parts:<br>1) keeping the IIS on - with a windows task scheduler, trying to open a simple HTML page in every f.e. 5 minutes this is accomplished<br>2) planning and persisting info about task - this can be done with a timer, inside IIS. Quartz is a good solution, you can use Quartz's Cron(Expression or parser class) to get next schedule time. Then you create a task, with a name, which is scheduler (not startable before) given time, has state: scheduled<br>3) another timer which handles the given task and related job in a transaction - either both succeed, or neither. the task manager simply checks every 5 secs. if there's a task to start, if yes, he starts it...</p><p>This solution is neither ideal, some tasks may be executed a bit later than planned (since IIS ping is every 5 sec), but it allows us even to implement retrying, etc.</p><p>There are also several issues with this design:<br>if IIS goes up, and between last planned task and DateTime.Now the task should have been started X times, should we create a task for each occurrence? or should we create a task only for the next occurrence? or should we create a task for the nearest previous occurrence and start it immediately. actually with pinging IIS every 5 minutes, having time between most recurring tasks more than 5 minutes this is not an issue, but maybe others have another domain, where these problems must be handled...</p>"
