id: dsq-747532558
date: 2010-06-16T19:40:15.0000000-07:00
name: Erlis Vidal
avatar: https://disqus.com/api/users/avatars/Erlis Vidal.jpg
message: '<p>@Craig: It will work, but this is confusing. It’s true that with this solution you type less, but you can confuse others. If you know that the call is performed to an extension method, then you know that the parameter could be null because that will be translated into <br>StaticClass.StaticMethod( parameter ) <br>And this is totally valid, parameter could be null. But if you don’t know that the method is an extension one, you will be confused and probably add your own validations around this:<br><code><br>X x = null; <br>x.SomeMethod(); <br></code><br>You’ll expect this to throw an exception. <br>I like the idea to use extension methods, but sometimes little details like this could cause some trouble. <br>Have you consider using the extension proposed by Phil as a static method instead?<br>something as simple as this:<br><code><br>public static class MyConvert {<br>...<br>public static string ToNullIfEmpty(string item) {<br>    return String.IsNullOrEmpty(items) ? null : item;<br>}<br></code><br>Usage:<br><code><br>public static void DoSomething(string argument) {<br>  var theArgument = MyConvert.ToNullIfEmpty(argument) ?? "defaultValue";<br>  Console.WriteLine(theArgument);<br>}<br></code><br><br></p>'
