id: dsq-747530717
date: 2010-01-15T18:25:00.0000000-08:00
name: Miguel Madero
avatar: https://disqus.com/api/users/avatars/Miguel Madero.jpg
message: "<p>@Raj, <br>I see your point on DRY and although I think it's an important principle, I'd go for User Experience in this case. Also it has other benefits, as performance, reducing server hits, bandwidth usage, etc. <br>The attributes that ship OOB like Required will probably cover an 80% of the scenarios. There's a big percentage that could be done with a really simple JS and a tiny bit that depends on the DB and can only be done server side or requires some complex logic and generating (or coding) the JS would just be too hard. <br>A sweet spot would be go generate the JavaScript for the simple custom validations. We can use something like ScriptSharp to generate to compile or C# into JS or some sort of Fluent interface that could be translated into JavaScript:<br>public override ValidationRule IsValid(object value) {<br>    value.NotNull<br>         .As&lt;double&gt;<br>            .Check(v=&gt;v&gt;MinPrice)   <br>            .Truncate(value).<br>            .Check(cents=&gt;cents&gt;0.99 || cents &lt; 0.995)<br>}<br>MinPrice would be a property of the Attribute that will be emmited as Json and could be read by the generated JS, no need to create a \"Rule\" that exposes the data from the attrbiute. <br>The ValidationRule could add some extra metadata (e.g. retrrvied from the DB as @John mentioned). <br>There're some functions simple to translate like Not null or the lamda expression to check for min price, however we need to write the following Extension method to extend our langage to provide a Math.Truncate that can be consumed by C# and JS. <br>public class Truncate : ValidationSyntax&lt;double&gt;<br>{<br>   public override IValidationSyntax&lt;double&gt; GetSyntax(IValidationSyntax&lt;double&gt; validationSyntax){<br>        return new InlineValidationSyntax&lt;double&gt;(x=&gt;Math.Truncate(validationSyntax.Value), \"Math.floor(value)\");<br>    }<br>}</p>"
