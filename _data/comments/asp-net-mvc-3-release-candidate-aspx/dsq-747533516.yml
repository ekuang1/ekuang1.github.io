id: dsq-747533516
date: 2010-11-09T21:13:57.0000000-08:00
name: Stacey
avatar: https://disqus.com/api/users/avatars/Stacey.jpg
message: <p>@Sean<br>I agree with his statement ; New documentation would be ideal. .NET in general suffers from documentation not reflecting the new technology.<br>The Intellisense Feature is great. I love it to death. I feel whole again. For a while I was feeling this deepening void as the '.' key on my keyboard was feeling lonely. It kept saying 'Why am I useless, again?'<br>I really, really like that everything ties into jQuery now. It feels fluid and very controlled. It feels solid, stable, and I've had less browser incompatibilities in general. <br>The graphics for .cshtml are nice. They're much better than the 'blank file' graphics we had before that made my OCD cringe.<br>As for what I want to see in the future, I've spoken to you privately in emails - but I'll state it here too. <br>- Templating is becoming popular, it would be nice if we didn't have to lose the Razor Syntax in favor of what the Templating has to offer. You claim that the HTML helpers are orthogonal to what jQuery Templating is offering, but I think it's a good place to look at making MVC even more versatile. (look at libraries like <a href="http://knockoutjs.com" rel="nofollow noopener" title="knockoutjs.com">knockoutjs.com</a> for what I mean.)<br>- Inheriting Javascript Intellisense<br> When I create a master page/layout page and put in javascript libraries, while the compile time works in inherited pages, the intellisense does not. If I reference jQuery-1.4.3 in my layout page, then create a new View, and start typing out some javascript, it it is not 'aware' of the reference to jQuery (whereas on the layout page, it is, and would give me full intellisense of the functions in jQuery (or any other .js file references). (This has actually been true in ASP.NET WebForms, so I think it is more of a Visual Studio issue than an MVC issue)<br>View Engine Builder<br>- Keeping convention is important, but oftentimes there do need to be minor tweaks on certain situations to the view paths. For instance, I have a specific project that requires a path structure that allows for <br>/controller/view<br>/controller/content/subview<br>/controller/content/subview[1]<br>/controller/content/subview[2]<br>etc.<br>This is easy enough to build - just wire up the paths and attach it. It wasn't difficult at all, but I think it would be really nice if there was more documentation or examples on how things of this nature can be made to work well for developers, including the impact it has on routing (the above example, for instance, has a huge [negative] impact on routing in Controllers/Areas where it is used.)</p>
