id: dsq-747538420
date: 2012-10-01T12:51:40.0000000-07:00
name: Steve
avatar: https://disqus.com/api/users/avatars/Steve.jpg
message: <p>A side note...<br>On a lot of apps I've worked on, the question of validation comes up.  I realize there is a preponderence of assumptions that objects should have invariant rules.  That is we should never be able to set a value to something bad, ever.<br>Yet in many cases, this often times gets in the way of the users using the app.  If the user only has part of the data at this time, disallowing them from entering that part accomplishes what?  Let's say we have city and zip but not street.  What does that mean for an Address?<br>Well, without a street it means you can't actually send them a package or letter.<br>So the point really is do you need to validate this on user input?  Or do you need to validate this when the data is being utilized?<br><br>I've done a lot of work with the mortgage industry and have handled a lot of addresses.  We would run addresses through a Zip+4 database to make sure they are properly formatted for the us postal service.  However, we'd usually store two versions of the address.  The one the user entered, and the one that had been validated by the database.<br>Because sometimes the validation was wrong, and you needed to be able to go back and look at the difference.  This was frequently the case with mortgages on new construction, because you'll have a new street that wasn't in the Zip+4 database until you get the next quartly update.  So it won't validate, but yet we know the address exists.<br>Anyway, it's just something else to think about.  I think we spend a lot of time worried about invariants in domains, when the business reality is much more flexible.</p>
