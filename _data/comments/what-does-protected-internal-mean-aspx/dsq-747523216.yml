id: dsq-747523216
date: 2011-05-07T09:03:51.0000000-07:00
name: James Chen
avatar: https://disqus.com/api/users/avatars/James Chen.jpg
message: "<p>If I remove \"internal\" from Kitty's virtual method MakeSomeNoise(), this method can still be overridden by Lion. Actually any sub-class (no matter it's internal or external) can override its base class' virtual methods. <br> <br>So, I think your example is not a good one to illustrate \"protected internal\" modifier. Here is my example:<br>//in Foo.dll<br>   public class Kitty<br>    {<br>        protected internal void Method1()<br>        {<br>            Console.WriteLine(\"This is from Kitty's Method1\");<br>        }<br>    }<br>    public class B<br>    {<br>        public void Method1()<br>        {<br>            var c = new Kitty();<br>            c.Method1(); <br>//Kitty's Method1 is accessible, because B and Kitty are in the same assembly, even though Kitty's Method1 is protected.<br>        }<br>    }<br><br>//in Bar.dll<br>   public class Lion : Kitty<br>    {<br>        public void Method2()<br>        {<br>            Method1(); <br>//Kitty's Method1 is accessible, because Lion inherits from Kitty, even though they are not in the same assembly.<br>        }<br>    }<br></p>"
