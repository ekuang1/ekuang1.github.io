id: dsq-747509864
date: 2005-06-15T07:42:00.0000000-07:00
name: Kevin Slamaker (enigmatic@inte
avatar: https://disqus.com/api/users/avatars/Kevin Slamaker (enigmatic@inte.jpg
message: <p>Wonderful stuff.<br><br><br><br>Thought it does suffer from a few problems. Even after SP1 for the 1.1 framework using Server.Transfer(&lt;page&gt;,true) when dealing with a click event will cause a Stack Overflow. This is due to the click event (which is stored using 2 hidden fields on the form) being re-raised over and over again with the preserved form data.<br><br><br><br>There is a workaround (See Issue 839521 at Microsoft) but it certainly isn't pretty and most corporations are not overly happy with installing a hotfix for a single issue.<br><br><br><br>The question I have though is what happens with the HttpHeader information when you use Server.Transfer and preseve the form data. My suspicions are that you cannot influence the current collection of headers at the point in time you are handling the click event and thus as it is simply switching to a new webpage, only the existing header information is carried forward.<br><br><br><br>This can then make certain changes to the state of the system difficult when performing such an event, the form fields are already populated (and are now in the response so you cannot modify them), the viewstate is already set and the only thing you really have access to is the session state but this is not useful when the user is allowed to have multiple windows open at the same time.<br><br><br><br>Personally I just dont understand why Microsoft implemented a mechanism to make it "like" windows events when it causes so many problems</p>
