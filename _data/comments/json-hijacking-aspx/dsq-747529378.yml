id: dsq-747529378
date: 2009-06-26T11:14:00.0000000-07:00
name: Haacked
avatar: https://github.com/haacked.png?size=120
message: <p>@Pat Hey Pat! Long time no hear. :) <br>I understand the pain this change would cause. I don't like it either, but I disagree with your assessment for several reasons. <br>First of all, read through the comments on this post and the <a href="https://haacked.com/archive/2009/06/26/too-late-to-change-json.aspx" rel="nofollow noopener" title="Is it too late to change JSON">follow-up post to this</a>. Notice that even <em>very smart</em> developers are having trouble fully grokking the issue.<br>Your own comment shows a bit of misunderstanding. I answer your question in a comment on the follow-up post about why the "d" property solves it. Short answer, a JavaScript file that starts with "{" is not a valid script, so the browser throws a script error and the script does not continue to execute. Remember, this attack relies on requesting the script via the SCRIPT tag.<br>Honestly, I think making JSONResult require POST, <em>but with an option to override that behavior to allow GET for those who know what they are doing</em> is the best option. Given that very few developers fully grok this bug, how can we expect them all to secure themselves? In the follow-up post, Douglas Crockford, the inventor of JSON, even condones this idea.<br>You say this attack is obscure, but I linked to posts that showed that GMail and Twitter have all been struck by this in the past. After all, aren't you almost always logged into Gmail? Think about that, <em>Google engineers got this wrong the first time</em>. If they didn't get this right, how do you expect us mere mortals to get it right <em>every time</em>?<br>Lastly, the jQuery code is not so hacky as you think. This guy <a href="http://itmeze.com/2009/06/postjson-how-to-avoid-json-attack/" rel="nofollow noopener" title="$.postJSON">wrote up a tiny jQuery example in no time</a>.<br>For those who want to allow GET for JSON arrays because they've got all these issues covered, we won't prevent that. I just don't think we should make that the default.</p>
