id: dsq-747523564
date: 2007-12-06T19:19:10.0000000-08:00
name: Ted
avatar: https://disqus.com/api/users/avatars/Ted.jpg
message: "<p>Re: RenderView()<br>I have to agree with Aaron.  I am pretty new to the MVC concept but after doing a lot of studying, I am getting a waft of something that seems wrong from both Microsoft's MVC and the much lauded MonoRail.<br>Microsoft's MVC(going off ScottGu's blog posts of it and the few other that are out there) seems to fall apart after the first level of Controller-View.  What I mean is that after the URL is routed to the appropriate controller and action, the only thing you seem to be able to do is call a single View, with RenderView().  What about View re-use?  Nesting Views?  Microsoft's MVC seems, kind of like the CodeIgniter project for PHP, that a controller action has to know everything about what a View requires from the Model so that it can be displayed properly.  If you want to re-use a View inside another Controller, it seems that you have to duplicate the means of getting the data into all the Views that you are displaying from that new Action.<br>MonoRail has something called a ViewComponent to alleviate this but even from their own documentation, ViewComponent smells like a duplication of their Controller class.<br>It all boils down to appearing to me that both of these frameworks require the Controller to pass the data from the Model to the View, rather than the View just grabbing it straight from the Model.  There is nothing in the MVC pattern(that I am aware of) that prohibits the View from doing this either.<br>Maybe I am just misunderstanding something crucial here though and would love to be corrected.</p>"
