id: dsq-747523562
date: 2007-12-06T16:49:23.0000000-08:00
name: Sean Chambers
avatar: https://disqus.com/api/users/avatars/Sean Chambers.jpg
message: '<p>I use this way of performing unit tests pretty often. Namely while testing repositories that need a specific nhibernate session injected. During my test fixture setup I create a sqlce session and then derive from my repositories so I can set the session with my sqlce session instead of the configuration file session.<br>Another pattern that is better equiped for testing static/singleton objects Hammett has described here: <a href="http://hammett.castleproject.org/?p=220" rel="nofollow noopener" title="http://hammett.castleproject.org/?p=220">http://hammett.castleprojec...</a><br>All this is doing is just wrapping the behavior inside of another class with an interface. Then you can mock out the interface at runtime. The benefit here is that you have taken something that could not be tested and wrapper it with an interface you control and thus can be mocked!<br>This can be used in any scenario including the one you describe above. The side effect is that it does create more code but in certain scenarios it is justified. I weigh each option closely and then make a decision on what would best serve my context. It is not often that I use the code hammett described there but sometimes it does come in useful.</p>'
