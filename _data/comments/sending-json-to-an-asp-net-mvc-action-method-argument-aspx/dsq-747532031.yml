id: dsq-747532031
date: 2011-07-29T03:13:54.0000000-07:00
name: Bohemian
avatar: https://disqus.com/api/users/avatars/Bohemian.jpg
message: '<p>Great article, works with MVC 2 and MVC 3 but I seem to be having an issue that I hope you (Phil Haack) or somebody else may have run across or have suggestions on... <br>Basically, if I create a stand-alone model as is done herein with the PersonInputModel I can access the Name &amp; Age values just fine from the Save ActionResult via the inputModel parameter...<br>But, if i use a class derived from a base class that looks like this...<br>    // Summary:<br>    //     Base class used to create ViewModel objects that contain the Model object<br>    //     and related elements.<br>    //<br>    // Type parameters:<br>    //   T:<br>    //     Type of the Model object.<br>    public abstract class ViewModelBase&lt;T&gt; : IViewModel where T : class<br>    {<br>        protected ViewModelBase();<br>        // Summary:<br>        //     Gets or sets the Model object.<br>        public T ModelObject { get; set; }<br>    }<br>derived class looks like this...<br>    [Serializable]<br>    public class DerivedInputModel : Test.Web.Mvc.ViewModelBase&lt;PersonInputModel&gt;<br>    {<br>...<br>    }<br>age and name are set in view viz...<br>&lt;%: Html.DisplayTextFor(model =&gt; model.ModelObject.Age)%&gt;<br>&lt;%: Html.DisplayTextFor(model =&gt; model.ModelObject.Name)%&gt;<br>when my Save ActionResult uses DerivedInputModel as a parameter JSON/MVC Futures/MVC Framework does not send/find any values for Age/Name...<br>basically, while the DerivedInputModel gets to the save action result everything is null...</p>'
