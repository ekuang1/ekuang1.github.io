id: dsq-747527731
date: 2009-01-16T19:01:02.0000000-08:00
name: Atif Aziz
avatar: https://disqus.com/api/users/avatars/Atif Aziz.jpg
message: <p>@Henri:<br></p><blockquote><br>The new version of JamesFormatter fails on "{{x}}". <br></blockquote><p><br>Yep and there are probably other failing cases not covered by the tests. See <a href="http://www.raboof.com/" rel="nofollow noopener" title="http://www.raboof.com/">my comment to Richard in the earlier post</a>.<br>In the end, I think your implementation is the best in terms of speed and simplicity. And as you said, whether its simplicity lies in a table-based state machine approach or regular control flow constructs of the language can be left up to the eye and mind of the beholder.<br>Someone out to nudge the BCL team to add this functionality to <code>String.Format</code> in .NET Framework 4.0 timeframe. There are some great ideas in <a href="http://www.python.org/dev/peps/pep-3101/" rel="nofollow noopener" title="http://www.python.org/dev/peps/pep-3101/">PEP 3101</a> that specifies advanced string formatting as it may become available with Python 3000. It would be very useful as dynamic languages and dynamic features in existing languages like C# become more common on the CLR.</p>
