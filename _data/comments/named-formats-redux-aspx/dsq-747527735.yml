id: dsq-747527735
date: 2009-01-20T19:36:43.0000000-08:00
name: Atif Aziz
avatar: https://disqus.com/api/users/avatars/Atif Aziz.jpg
message: <p>@Kelly Stuard:<br></p><blockquote>Only the HanselFormat and OskarFormat work with IDictionary passed as the object.</blockquote><p><br>Any implementation that uses <a href="http://msdn.microsoft.com/en-us/library/4hx47hfe.aspx" rel="nofollow noopener" title="http://msdn.microsoft.com/en-us/library/4hx47hfe.aspx"><code>DataBinder.Eval</code></a>, as the other formatters do, can work with dictionaries (or any other type for that matter) provided that the supplied source has an <a href="http://msdn.microsoft.com/en-us/library/system.componentmodel.icustomtypedescriptor.aspx" rel="nofollow noopener" title="http://msdn.microsoft.com/en-us/library/system.componentmodel.icustomtypedescriptor.aspx"><code>ICustomTypeDescriptor</code></a> implementation available. <code>DataBinder.Eval</code> internally relies on <code>ICustomTypeDescriptor</code> to resolve the property names and subsequently acquire their values. As a result, those formatters are quite open and don't need any further modification. In my projects, I have a keyed-collection implementation that also implements <code>ICustomTypeDescriptor</code> and which can be passed on to such formatters just fine. The code can be found below:<br><a href="http://gist.github.com/49984" rel="nofollow noopener" title="http://gist.github.com/49984">DictionaryObject.cs</a></p>
