id: dsq-747527138
date: 2008-12-18T23:16:52.0000000-08:00
name: haacked
avatar: https://github.com/haacked.png?size=120
message: <p>@developing chris. Ok, let's do a thought experiment using your recommendation.<br>We have a page with &lt;%= Html.TextArea("foo") %&gt;. The user enters the following in the browser text box.<br><br></p><pre>+----------------------+<br>|                      |<br>|Foo                   |<br>+----------------------+<br></pre><p><br><br><br>That will get submitted to the server as the following string:<br><code>@"\r\nFoo"</code><br>Now let's assign that to the variable <code>submittedValue</code> and re-render the form by calling:<br><code>&lt;Html.TextArea("foo", submittedValue) %&gt;</code><br>in order to render *exactly* what the user submitted. According to the markup you suggested we render, the user would see:<br><br></p><pre>+----------------------+<br>|Foo                   |<br>|                      |<br>+----------------------+</pre><p><br>Does that seem like the correct behavior to you? If so, then we'll have to agree to disagree. I'd expect that the user would get exactly what the user typed in, which is:<br><br><br></p><pre>+----------------------+<br>|                      |<br>|Foo                   |<br>+----------------------+<br></pre><p><br><br>Another way to look at it, is if we're doing XHTML, why should we render:<br>&lt;textarea&gt;Value&lt;/textarea&gt;<br>instead of <br>&lt;textarea&gt;<br>  Value<br>&lt;/textarea&gt;<br>by default? After all, textarea is not an inline element.<br></p>
