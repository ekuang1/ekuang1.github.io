id: dsq-747526302
date: 2008-09-01T18:34:51.0000000-07:00
name: Steve Sanderson
avatar: https://disqus.com/api/users/avatars/Steve Sanderson.jpg
message: <p>&gt; Although they are distinct concepts, it's practical <br>&gt; to have an action as a method of the same name.<br>I have to agree with mvcFan. Not yet going so far as to say "ActionName was a waste of time", but I am curious about what the intended use case is here.<br>As with anything in software, an extra abstraction layer adds flexibility, but it also adds an extra level of cognitive friction. Why would developers want to have to keep track of which action methods correspond to which "action names"? When placing a link to another action method, doesn't the developer usually want to say *exactly which* actual C# method should be called, not obscuring that intention behind a mapping layer that might in fact cause the link to go to some other method? There is such a thing as too many abstraction layers :)<br>The fact that this destroys any possibility of strongly-typed link helpers and redirection helpers, reducing the whole API to a string-based system, is unfortunate too. Is it really worth it? Who was asking for action names? Can you cite compelling use cases?<br>I'm sure you'll come along and explain how action names are great and then we'll all be happy. Until then, curious...</p>
