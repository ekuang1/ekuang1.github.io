id: dsq-747515599
date: 2010-09-21T11:44:16.0000000-07:00
name: Clayton
avatar: https://disqus.com/api/users/avatars/Clayton.jpg
message: <p>I think I might stand alone here from looking at the other comments, but I actually disagree with writing re-runnable change scripts in the manner described in the article. My view is that the change scripts should only ever be applied to the database via the automated mechanism that is used to deploy the changes in any environment. That is, the changes should always be applied the same way, whether it's to Dev, Test or Production. And given that, it should always be known what the starting point of the database is, before the scripts are being applied. If the starting point is not known, controlled and validated, then the change cannot be expected to work.<br>And given that the starting point must be defined, it must also be known whether, say, an object of interest already exists. For example, when changing an existing stored procedure, it must be known that the proc exists, so there is no need to do the common drop/create or create if not exists / alter pattern.<br>Knowing the starting point, and only have to code to that, means simpler scripts, and less to test.<br>The key thing is that the developers should never be directly executing the scripts, even on their own local environment. They should be using the scripted mechanism that is created for that purpose.<br>cheers<br></p>
