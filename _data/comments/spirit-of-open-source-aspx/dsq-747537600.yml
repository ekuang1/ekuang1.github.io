id: dsq-747537600
date: 2012-02-22T17:54:56.0000000-08:00
name: haacked
avatar: https://github.com/haacked.png?size=120
message: "<p>@David you called my post a \"long noise filled rant\" but you haven't directly refuted any of my points or the citations I provided.<br>I think you make a great argument that closed non-collaborative development sucks. I agree! I worked my ass off at Microsoft to try and change that, and I like to think that I and my cohorts got the ship moving a bit.<br>Perhaps I don't have the same level of anger that others do because I understand all the barriers (real and perceived) for Microsoft to do so, but we were knocking them down one by one. Unfortunately, I am bound by confidentiality so I can't say more than that.<br>I think NuGet is evidence of the ball rolling as it's developed in the open in a collaborative manner. Trying to get ASP.NET MVC there was more challenging because it's an older project, and NuGet was brand new at the time.<br>My post is not meant to make excuses for Microsoft. Why would I care? I don't work there any longer. I think they should move to a more open and collaborative model. I think it's their loss that they don't.<br>The point I'm making is one I'd make whether or not I ever worked at Microsoft. It's the same point Miguel (non-MS) makes.<br>I believe you're mixing the terms \"open source\" and \"open and collaborative\". You state that open and collaborative is in the \"true spirit of open source\". <strong>Ok, convince me.</strong> My post cites the pioneers of open source. It cites the open source and free software definitions. <strong>I would love to see your citations.</strong><br>Again, I totally and completely believe in the value of open collaboration. I also believe it's a core part of the open source culture. But I don't think it's disingenuous in any way to call a project that's not open and collaborative, but has an OSS license, an open source project.<br>I may not like the way they develop it, but that doesn't give me the right to redefine terms to suit my preference. I'd rather be crisp with definitions and say something like, \"Yeah, they're open source but they're not open and collaborative.\"<br>I'd like to address two other points you make.<br>&gt; Now tell me which true \"OSS\" project prefers \"non-OSS\" <br>&gt; proprietary components in their defaults?<br>Well to be fair, ASP.NET and the .NET Framework is non-OSS and proprietary. I hope even that will change. Are you arguing that nothing in .NET can thus be called open source?<br>&gt; This is how \"true OSS\" projects evolve - and MVC doesn't meet <br>&gt; this definition.<br>I'd say this is how the good OSS projects evolve and truly open and collaborative projects evolve, but it's still true OSS.<br>Just to reiterate, because I feel like this is the point that gets missed in the heat of discussion, I'm not arguing or trying to excuse the closed approach that Microsoft takes. <br>I agree with you. I feel like a lot of folks think that's what we're arguing about. What I'm saying is what we're really arguing about are definitions. I don't think OSS means what you think it means. <br>I see open source as describing the product and the freedom granted to the users of the product and I cite plenty of evidence for this. Your argument seems to add on extra value judgments to the term that I think is better associated with a different term.<br> <br>Thus MVC is truly OSS, but it's also not as open and collaborative to the full extent it could be.<br></p><p><strong>Aside</strong><em>: <br>While I say it's non-collaborative, at the very least the team has been good in listening to people in the community for its direction. Much better than most other teams at Microsoft. It's just that there is no one voice in the community so around a half is always disappointed with every decision and cites it as evidence of MS not getting it.</em></p>"
