id: dsq-747524254
date: 2008-02-21T20:18:14.0000000-08:00
name: Jason
avatar: https://disqus.com/api/users/avatars/Jason.jpg
message: <p>I'm still confused about why this is such a big deal. whether you add/change a signature of an interface or an abstract class there is still a change.<br>Ayende Rahien, had a post in response to part 1 which made more sense to me than this (and the previous) post.  I agree, if you're building the framework, you should be responsible for compatibility.  If a developer is going to upgrade, they should be responsible for managing the changes and addressing breaks.<br>while the example code above is just that, an example. I dont' ever see why a framework developer would do something like this. at the very least the methodtwo() should be empty, not throw an excpetion. then there wouldn't be a breaking change.<br>If the argument is "..but what if?" 1. do you want that developer on the team? 2. you're developing the framework so you should be accounting for this.<br>personally i can't stand the idea of an IsImplement property. not only do i have to know about the new method, but now i also have to check to determine if i can use it? again having an empty virtual method would negate these issues.<br>as i started this post, i'm still confused as to why an abstract class is "better" for changes than an interface.</p>
