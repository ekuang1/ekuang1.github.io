id: dsq-747515233
date: 2006-06-01T00:49:00.0000000-07:00
name: Haacked
avatar: https://github.com/haacked.png?size=120
message: <p>Well in one instance, my EmailProvider is as simple as a method Send(to, from, subject, body) because that was all that was needed.<br>Of course, I could complicate the provider and create a facade to the provider.  That would probably be the best solution.  But for now, I'm following the YAGNI principle and doing the least amount of work that works.<br>And perhaps I was wrong to lump this into TDD, because my main point is that at some point, this is useful for integration testing with 3rd party email components.<br>Perhaps the best scenario for its usage is the following. In TDD (as I see it), when you find a bug in your software, you write a test to expose the bug (the RED factor in writing test first).  Then you write the code that fixes the bug and re-test (GREEN factor).<br>So this utility comes in handy in that case. It also comes in handy for those who want to test, but don't feel like refactoring their code to use the provider model.  I'm trying to deal with real-world developers, not our idealized vision of developers. Some are just plain lazy (like me).  <br>Writing an email provider may be a case of premature generalization.</p>
