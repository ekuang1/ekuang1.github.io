id: dsq-747513214
date: 2005-10-18T21:11:00.0000000-07:00
name: Haacked
avatar: https://github.com/haacked.png?size=120
message: <p>Ah yeah, even in ASP.NET projects, I don't apply TDD to the UI.  The UI level has too much churn and unit tests are less effective there.  <br><br><br><br>But a well factored application has all its guts separated from the UI.  So I can test the guts.<br><br><br><br>And 100% code coverage is not the goal of TDD.  As I wrote before <a href="https://haacked.com/archive/2004/11/03/1559.aspx" rel="nofollow noopener" title="https://haacked.com/archive/2004/11/03/1559.aspx">https://haacked.com/archive/2004/11/03/1559.aspx</a> even if you had it, you have a false sense of security.<br><br><br><br>Even for GUI apps, I'd say the right blend of TDD is useful. I don't think it's an either or proposition.<br><br><br><br>I'd tell Joel and Wil, you can have decent and sufficient test coverage (not 100%) AND deliver SIX new features. ;)<br><br><br><br>TDD is a lot like documentation.  You could wait till the end of the project to write up end-user documentation. BUt it's so much more effective if you do it as you go along, and it ends up taking less time overall.</p>
