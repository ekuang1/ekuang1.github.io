id: dsq-747519063
date: 2007-10-18T12:48:37.0000000-07:00
name: Chris
avatar: https://disqus.com/api/users/avatars/Chris.jpg
message: "<p>Hi,<br>I agree with the point of your post, i.e. communicate to ensure  that the objectives and the implementations are as aligned as possible, but i could not resist to point something you say i feel deeply untrue.<br>So you said :<br>&gt;&gt;Human language is inexact, and we have to deal with that fact of life.<br>&gt;&gt;Unfortunately, sofware doesn't have the same resiliency towards ambiguity.<br>I would like to point that as far as you are communicating, either speaking to somebody or writing code in a computer language that will be compiled and deployed on a particular plateform, you HAVE to make asumptions about the context. I belive any language, human or not, have ambiguities that only the context can solve.<br>Even with proper input, you software can run good on one plateform, and break on another, just because the assumptions of the developer are not valid anymore on the other plateform. I believe ambiguity is part of any process of communication, either human or mechanical. But both humans and machines are fault tolerant, up to a certain limit.<br>Imagine a taxi driver who is told to drive faster. Does this mean that he has to never slow down to the risk of an accident ? He needs to understand the request, just as any software component, in order to fulfill his mission correctly. And to understand the request means to have great knowledge of the context.<br>From this point of view, softwares, or better, computers, are no different than people : they need to deal at multiple levels with ambiguities and errors, as those are inherant to any form of communication, because of what communication is by itself.<br>But maybe i misunderstood your point :o)<br>Cheers,<br>Christian<br></p>"
