id: dsq-1118376917
replyToId: dsq-1117923695
date: 2013-11-11T10:31:57.0000000-08:00
name: haacked
avatar: https://github.com/haacked.png?size=120
message: <p>Your code has a flaw. It presents a false dichotomy. See, only one if statement in your comment and you got it wrong. :P</p><p>&gt; Kids writing code these day.</p><p>Ha, I haven't been called a "Kid" in a long time. I'm sure Michael Feathers isn't a kid. The usual reason to resort to an ad-hominem is in lieu of an actual strong argument.</p><p>&gt; instead of digging within the codebase just to see where the IF actually is.</p><p>Even in C++ you're dealing with a level of abstraction. There's a point where you're willing the computer to just do something and not feel you have to tell it exactly how to do it.</p><p>For example, when you tell the computer to print something to the screen, you don't tell it "IF there's enough memory available for this string, allocate the necessary memory. IF a display is available and IF the device driver is ready, send this string to the driver to display it." And so on...</p><p>Even a printf statement hides a lot of "IF" statements. "printf" is declarative. You declare that you want the computer to print something, and _it_ figures out all that needs to happen to do that. *Your* code doesn't have to bother with that every time yo uwant to print something to the screen.</p><p>*THAT* is what this post is about. Looking for ways to make your code more declarative so that you can tell the computer *what* you want rather than having to tell it *how* every time.</p>
