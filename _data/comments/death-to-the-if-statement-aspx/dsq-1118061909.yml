id: dsq-1118061909
replyToId: dsq-1118050482
date: 2013-11-11T06:37:50.0000000-08:00
name: Alex Burke
avatar: https://disqus.com/api/users/avatars/alex_burke.jpg
message: <p>Absolutely agree - I was meaning in response to the examples given in the post. Of course ternaries, binary ops and generally thinking about what each cycle of your code is doing cuts out massively wasteful/unnecessary branching and for that I stand corrected (blindsided if you will). It was more the functional wrapper approach and the offloading of maintenance issue and blindness to what was happening lower down. Sometimes an If -&gt; else if -&gt; else is the absolute best fit for the algo if you cant perform it with one of the above mentioned approaches. Im not aware of how a programmer specifically can utilise said branch predictions from the chip mind you (in a higher level language not asm) ? and if the prediction is wrong doesnt the chip hang for the next proc cycle? sometimes negating the benefit of the prediction in the first place? I mean by all means replace a very long if with a switch - architecturally though thats why one would dive into asm and optimise from there - granted its totally platform dependant and most compilers these days do a pretty good job - so unless the function you are calling is some form of trustworthy platform agnostic asm routine isnt the branch prediction somewhat hit and miss and not really relevant to what a coder is doing in a higher language abstraction? forgive me if i'm off base?<br></p>
